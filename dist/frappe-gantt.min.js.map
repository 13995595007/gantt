{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nconst SHORTENED = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n};\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9])+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length === 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(+values[1] + 1, 2, 0),\n      DD: values[2],\n      HH: values[3],\n      mm: values[4],\n      ss: values[5],\n      SSS: values[6],\n      D: values[2],\n      MMMM: month_name_capitalized,\n      MMM: SHORTENED[month_name_capitalized],\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replaceAll(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replaceAll(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else if (attr === 'clipPath') {\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_values() {\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.image_size = this.height - 5;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper \" + (this.task.custom_class || \"\") + (this.task.important && 'important'),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  draw() {\n    this.draw_bar();\n    this.draw_progress_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_label();\n    this.draw_resize_handles();\n\n    if (this.task.thumbnail) {\n      this.draw_thumbnail();\n    }\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n    const x = (date_utils.diff(this.task._start, this.gantt.gantt_start, 'hour') /\n      this.gantt.options.step) *\n      this.gantt.options.column_width;\n\n    this.$date_highlight = createSVG(\"rect\", {\n      x,\n      y: this.gantt.options.header_height - 17,\n      width: this.width,\n      height: this.height * 0.8,\n      rx: 12,\n      class: \"date-highlight\",\n      append_to: this.bar_group,\n    });\n\n\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    let x_coord = this.x + this.$bar.getWidth() / 2;\n\n    if (this.task.thumbnail) {\n      x_coord = this.x + this.image_size + 5;\n    }\n\n    createSVG(\"text\", {\n      x: x_coord,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n  draw_thumbnail() {\n    let x_offset = 10, y_offset = 2;\n    let defs, clipPath;\n\n    defs = createSVG('defs', {\n      append_to: this.bar_group\n    });\n\n    createSVG('rect', {\n      id: 'rect_' + this.task.id,\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      rx: '15',\n      class: 'img_mask',\n      append_to: defs\n    });\n\n    clipPath = createSVG('clipPath', {\n      id: 'clip_' + this.task.id,\n      append_to: defs\n    });\n\n    createSVG('use', {\n      href: '#rect_' + this.task.id,\n      append_to: clipPath\n    });\n\n    createSVG('image', {\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      class: 'bar-img',\n      href: this.task.thumbnail,\n      clipPath: 'clip_' + this.task.id,\n      append_to: this.bar_group\n    });\n  }\n\n  draw_resize_handles() {\n    if (this.invalid || this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = 8;\n\n    createSVG(\"rect\", {\n      x: bar.getX() + bar.getWidth() + handle_width - 4,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() - handle_width - 4,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    this.$handle_progress = createSVG(\"polygon\", {\n      points: this.get_progress_polygon_points().join(\",\"),\n      class: \"handle progress\",\n      append_to: this.handle_group,\n    });\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    return [\n      bar_progress.getEndX() - 6,\n      bar_progress.getY() + bar_progress.getHeight() + 8,\n      bar_progress.getEndX() + 6,\n      bar_progress.getY() + bar_progress.getHeight() + 8,\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() + 0.5,\n    ];\n  }\n\n  bind() {\n    if (this.invalid) return;\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    let in_action = false;\n    $.on(this.group, \"mouseover\", (e) => this.gantt.trigger_event(\"hover\", [this.task, e.screenX, e.screenY, e]))\n\n    $.on(this.group, \"focus \" + this.gantt.options.popup_trigger, (e) => {\n      this.gantt.trigger_event(\"click\", [this.task]);\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n      if (in_action) {\n        this.gantt.hide_popup();\n        this.group.classList.remove(\"active\");\n      } else {\n        this.show_popup(e.offsetX);\n        this.gantt.unselect_all();\n        this.group.classList.add(\"active\");\n      }\n\n      in_action = !in_action\n    });\n\n    $.on(this.group, \"dblclick\", (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      this.gantt.trigger_event(\"double_click\", [this.task]);\n    });\n  }\n\n  show_popup(x) {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const subtitle = start_date + \" - \" + end_date;\n\n    this.gantt.show_popup({\n      x,\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x) {\n      // get all x values of parent task\n      const xs = this.task.dependencies.map((dep) => {\n        return this.gantt.get_bar(dep).$bar.getX();\n      });\n      // child task must not go before parent\n      const valid_x = xs.reduce((prev, curr) => {\n        return x >= curr;\n      }, x);\n      if (!valid_x) {\n        width = null;\n        return;\n      }\n      this.update_attr(bar, \"x\", x);\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  update_label_position_on_horizontal_scroll({ x, sx }) {\n    const container = document.querySelector('.gantt-container');\n    const label = this.group.querySelector('.bar-label');\n    const img = this.group.querySelector('.bar-img') || '';\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n    let newLabelX = label.getX() + x;\n    let newImgX = img && img.getX() + x || 0;\n    let imgWidth = img && img.getBBox().width + 7 || 7;\n    let labelEndX = newLabelX + label.getBBox().width + 7;\n    let viewportCentral = sx + container.clientWidth / 2;\n\n    if (label.classList.contains('big')) return;\n\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n\n    }\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 1000);\n  }\n\n  compute_start_end_date() {\n    const bar = this.$bar;\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\n    const new_start_date = date_utils.add(\n      this.gantt.gantt_start,\n      x_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n    const new_end_date = date_utils.add(\n      new_start_date,\n      width_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(\"Month\")) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    this.y =\n      this.gantt.options.header_height +\n      this.gantt.options.padding +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.gantt.view_is(\"Week\")) {\n      rem = dx % (this.gantt.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 14\n          ? 0\n          : this.gantt.options.column_width / 7);\n    } else if (this.gantt.view_is(\"Month\")) {\n      rem = dx % (this.gantt.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 60\n          ? 0\n          : this.gantt.options.column_width / 30);\n    } else {\n      rem = dx % this.gantt.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 2\n          ? 0\n          : this.gantt.options.column_width);\n    }\n    return position;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (this.invalid) return;\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n  }\n\n  update_label_position() {\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\"),\n      img = this.group.querySelector('.bar-img');\n\n\n    let padding = 5;\n    let x_offset_label_img = this.image_size + 10;\n    const labelWidth = label.getBBox().width\n    const barWidth = bar.getWidth()\n    if (labelWidth > barWidth) {\n      label.classList.add(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + bar.getWidth() + padding);\n        img_mask.setAttribute('x', bar.getX() + bar.getWidth() + padding);\n        label.setAttribute('x', bar.getX() + bar.getWidth() + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + bar.getWidth() + padding);\n      }\n    } else {\n      label.classList.remove(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + padding);\n        img_mask.setAttribute('x', bar.getX() + padding);\n        label.setAttribute('x', bar.getX() + barWidth / 2 + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth / 2 - labelWidth / 2);\n      }\n    }\n  }\n\n  update_handle_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    const bar = this.$bar;\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() - 12);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() + 4);\n    const handle = this.group.querySelector(\".handle.progress\");\n    handle && handle.setAttribute(\"points\", this.get_progress_polygon_points());\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === \"[object Function]\"\n  );\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n  }\n\n  calculate_path() {\n    let start_x =\n      this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n    const condition = () =>\n      this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n      start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n    while (condition()) {\n      start_x -= 10;\n    }\n\n    const start_y =\n      this.gantt.options.header_height +\n      this.gantt.options.bar_height +\n      (this.gantt.options.padding + this.gantt.options.bar_height) *\n      this.from_task.task._index +\n      this.gantt.options.padding;\n\n    const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2 - 7;\n    const end_y =\n      this.gantt.options.header_height +\n      this.gantt.options.bar_height / 2 +\n      (this.gantt.options.padding + this.gantt.options.bar_height) *\n      this.to_task.task._index +\n      this.gantt.options.padding;\n\n    const from_is_below_to =\n      this.from_task.task._index > this.to_task.task._index;\n    const curve = this.gantt.options.arrow_curve;\n    const clockwise = from_is_below_to ? 1 : 0;\n    const curve_y = from_is_below_to ? -curve : curve;\n    const offset = from_is_below_to\n      ? end_y + this.gantt.options.arrow_curve\n      : end_y - this.gantt.options.arrow_curve;\n\n    this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n    if (\n      this.to_task.$bar.getX() <\n      this.from_task.$bar.getX() + this.gantt.options.padding\n    ) {\n      const down_1 = this.gantt.options.padding / 2 - curve;\n      const down_2 =\n        this.to_task.$bar.getY() + this.to_task.$bar.getHeight() / 2 - curve_y;\n      const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n      this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n    }\n  }\n\n  draw() {\n    this.element = createSVG(\"path\", {\n      d: this.path,\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  update() {\n    this.calculate_path();\n    this.element.setAttribute(\"d\", this.path);\n  }\n}\n","export default class Popup {\n  constructor(parent, custom_html) {\n    this.parent = parent;\n    this.custom_html = custom_html;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    const target_element = options.target_element;\n\n    if (this.custom_html) {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n      this.parent.style.width = this.parent.clientWidth + \"px\";\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = options.target_element.getBBox();\n    }\n\n    this.parent.style.left = options.x - this.parent.clientWidth / 2 + \"px\";\n    this.parent.style.top = position_meta.y + position_meta.height + 10 + \"px\";\n\n    this.pointer.style.left = this.parent.clientWidth / 2 + \"px\";\n    this.pointer.style.top = \"-15px\";\n\n    // show\n    this.parent.style.opacity = 1;\n  }\n\n  hide() {\n    this.parent.style.opacity = 0;\n    this.parent.style.left = 0;\n  }\n}\n","import date_utils from \"./date_utils\";\nimport { $, createSVG } from \"./svg_utils\";\nimport Bar from \"./bar\";\nimport Arrow from \"./arrow\";\nimport Popup from \"./popup\";\n\nimport \"./gantt.scss\";\n\nconst VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  YEAR: \"Year\",\n};\n\nconst VIEW_MODE_PADDING = {\n  HOUR: [\"7d\", \"7d\"],\n  QUARTER_DAY: [\"7d\", \"7d\"],\n  HALF_DAY: [\"7d\", \"7d\"],\n  DAY: [\"1m\", \"1m\"],\n  WEEK: [\"1m\", \"1m\"],\n  MONTH: [\"1m\", \"1m\"],\n  YEAR: [\"2y\", \"2y\"],\n};\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n    let svg_element, wrapper_element;\n\n    // CSS Selector is passed\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n\n    // get the SVGElement\n    if (element instanceof HTMLElement) {\n      wrapper_element = element;\n      svg_element = element.querySelector(\"svg\");\n    } else if (element instanceof SVGElement) {\n      svg_element = element;\n    } else {\n      throw new TypeError(\n        \"Frappé Gantt only supports usage of a string CSS selector,\" +\n        \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n      );\n    }\n\n    // svg element\n    if (!svg_element) {\n      // create it\n      this.$svg = createSVG(\"svg\", {\n        append_to: wrapper_element,\n        class: \"gantt\",\n      });\n    } else {\n      this.$svg = svg_element;\n      this.$svg.classList.add(\"gantt\");\n    }\n\n    // wrapper element\n    this.$container = document.createElement(\"div\");\n    this.$container.classList.add(\"gantt-container\");\n\n    const parent_element = this.$svg.parentElement;\n    parent_element.appendChild(this.$container);\n    this.$container.appendChild(this.$svg);\n\n    // popup wrapper\n    this.popup_wrapper = document.createElement(\"div\");\n    this.popup_wrapper.classList.add(\"popup-wrapper\");\n    this.$container.appendChild(this.popup_wrapper);\n  }\n\n  setup_options(options) {\n    const default_options = {\n      header_height: 50,\n      column_width: 30,\n      step: 24,\n      view_modes: [...Object.values(VIEW_MODE)],\n      bar_height: 30,\n      bar_corner_radius: 3,\n      arrow_curve: 5,\n      padding: 18,\n      view_mode: \"Day\",\n      date_format: \"YYYY-MM-DD\",\n      popup_trigger: \"click\",\n      custom_popup_html: null,\n      language: \"en\",\n      readonly: false,\n      highlight_weekend: true,\n      scroll_today: true\n    };\n    this.options = Object.assign({}, default_options, options);\n    if (!options.view_mode_padding) options.view_mode_padding = {}\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === \"string\") {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      // convert to Date objects\n      task._start = date_utils.parse(task.start);\n      if (task.end === undefined && task.duration !== undefined) {\n        task.end = task._start;\n        let durations = task.duration.split(\" \");\n\n        durations.forEach((tmpDuration) => {\n          let { duration, scale } = date_utils.parse_duration(tmpDuration);\n          task.end = date_utils.add(task.end, duration, scale);\n        });\n      }\n      task._end = date_utils.parse(task.end);\n\n      // make task invalid if duration too large\n      if (date_utils.diff(task._end, task._start, \"year\") > 10) {\n        task.end = null;\n      }\n\n      // cache index\n      task._index = i;\n\n      // invalid dates\n      if (!task.start && !task.end) {\n        const today = date_utils.today();\n        task._start = today;\n        task._end = date_utils.add(today, 2, \"day\");\n      }\n\n      if (!task.start && task.end) {\n        task._start = date_utils.add(task._end, -2, \"day\");\n      }\n\n      if (task.start && !task.end) {\n        task._end = date_utils.add(task._start, 2, \"day\");\n      }\n\n      // if hours is not set, assume the last day is full day\n      // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n      const task_end_values = date_utils.get_date_values(task._end);\n      if (task_end_values.slice(3).every((d) => d === 0)) {\n        task._end = date_utils.add(task._end, 24, \"hour\");\n      }\n\n      // invalid flag\n      if (!task.start || !task.end) {\n        task.invalid = true;\n      }\n\n      // dependencies\n      if (typeof task.dependencies === \"string\" || !task.dependencies) {\n        let deps = [];\n        if (task.dependencies) {\n          deps = task.dependencies\n            .split(\",\")\n            .map((d) => d.trim().replaceAll(' ', '_'))\n            .filter((d) => d);\n        }\n        task.dependencies = deps;\n      }\n\n      // uids\n      if (!task.id) {\n        task.id = generate_id(task);\n      } else if (typeof task.id === 'string') {\n        task.id = task.id.replaceAll(' ', '_')\n      } else {\n        task.id = `${task.id}`\n      }\n\n      return task;\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      for (let d of t.dependencies) {\n        this.dependency_map[d] = this.dependency_map[d] || [];\n        this.dependency_map[d].push(t.id);\n      }\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    // fire viewmode_change event\n    this.trigger_event(\"view_change\", [mode]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 120;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 120;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (!this.gantt_start || task._start < this.gantt_start) {\n        this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || task._end > this.gantt_end) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, \"day\");\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, \"day\");\n\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n    gantt_start = date_utils.add(\n      gantt_start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      format_string = \"YYYY\"\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      format_string = \"YYYY-MM\"\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n      format_string = \"YYYY-MM-DD\"\n    } else {\n      format_string = \"YYYY-MM-DD HH\"\n    }\n    this.gantt_start = date_utils.parse(date_utils.format(gantt_start, format_string));\n    this.gantt_start.setHours(0, 0, 0, 0)\n    this.gantt_end = date_utils.add(\n      gantt_end,\n      padding_end.duration,\n      padding_end.scale,\n    );\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, \"year\");\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, \"month\");\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  bind_events() {\n    if (this.options.readonly) return\n    this.bind_grid_click();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_width();\n    this.set_scroll_position();\n    if (this.options.scroll_today) this.scroll_today()\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = [\"grid\", \"arrow\", \"progress\", \"bar\", \"details\", \"date\"];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG(\"g\", {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n    this.make_grid_ticks();\n    this.make_grid_highlights();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    const grid_height =\n      this.options.header_height +\n      this.options.padding +\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: \"grid-background\",\n      append_to: this.layers.date,\n    });\n\n    $.attr(this.$svg, {\n      height: grid_height + this.options.padding + 100,\n      width: \"100%\",\n    });\n  }\n\n  make_grid_rows() {\n    const rows_layer = createSVG(\"g\", { append_to: this.layers.grid });\n    const lines_layer = createSVG(\"g\", { append_to: this.layers.grid });\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    let row_y = this.options.header_height + this.options.padding / 2;\n\n    for (let task of this.tasks) {\n      createSVG(\"rect\", {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: \"grid-row\",\n        append_to: rows_layer,\n      });\n\n      createSVG(\"line\", {\n        x1: 0,\n        y1: row_y + row_height,\n        x2: row_width,\n        y2: row_y + row_height,\n        class: \"row-line\",\n        append_to: lines_layer,\n      });\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n  }\n\n  make_grid_header() {\n    const header_width = this.dates.length * this.options.column_width;\n    const header_height = this.options.header_height + 10;\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: header_width,\n      height: header_height,\n      class: \"grid-header\",\n      append_to: this.layers.grid,\n    });\n  }\n\n  make_grid_ticks() {\n    let tick_x = 0;\n    let tick_y = this.options.header_height + this.options.padding / 2;\n    let tick_height =\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    for (let date of this.dates) {\n      let tick_class = \"tick\";\n      // thick tick for monday\n      if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n        tick_class += \" thick\";\n      }\n      // thick tick for first week\n      if (\n        this.view_is(VIEW_MODE.WEEK) &&\n        date.getDate() >= 1 &&\n        date.getDate() < 8\n      ) {\n        tick_class += \" thick\";\n      }\n      // thick ticks for quarters\n      if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n        tick_class += \" thick\";\n      }\n\n      createSVG(\"path\", {\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n        class: tick_class,\n        append_to: this.layers.grid,\n      });\n\n      if (this.view_is(VIEW_MODE.MONTH)) {\n        tick_x +=\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\n      } else {\n        tick_x += this.options.column_width;\n      }\n    }\n  }\n\n  highlightWeekends() {\n    if (!this.view_is('Day') && !this.view_is('Half Day')) return\n    for (let d = new Date(this.gantt_start); d <= this.gantt_end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() === 0 || d.getDay() === 6) {\n        const x = (date_utils.diff(d, this.gantt_start, 'hour') /\n          this.options.step) *\n          this.options.column_width;\n        const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n        createSVG('rect', {\n          x,\n          y: this.options.header_height + this.options.padding / 2,\n          width: (this.view_is('Day') ? 1 : 2) * this.options.column_width,\n          height,\n          class: 'holiday-highlight',\n          append_to: this.layers.grid,\n        });\n      }\n    }\n  }\n\n  //compute the horizontal x distance\n  computeGridHighlightDimensions(view_mode) {\n    let xDist = 0;\n\n    if (this.view_is(VIEW_MODE.DAY)) {\n      return (\n        (date_utils.diff(date_utils.today(), this.gantt_start, \"hour\") /\n          this.options.step) *\n        this.options.column_width\n      );\n    }\n\n    for (let date of this.dates) {\n      const todayDate = new Date();\n      const startDate = new Date(date);\n      const endDate = new Date(date);\n      switch (view_mode) {\n        case VIEW_MODE.WEEK:\n          endDate.setDate(date.getDate() + 7);\n          break;\n        case VIEW_MODE.MONTH:\n          endDate.setMonth(date.getMonth() + 1);\n          break;\n        case VIEW_MODE.YEAR:\n          endDate.setFullYear(date.getFullYear() + 1);\n          break;\n      }\n      if (todayDate >= startDate && todayDate <= endDate) {\n        break;\n      } else {\n        xDist += this.options.column_width;\n      }\n    }\n    return xDist;\n  }\n\n  make_grid_highlights() {\n    if (this.options.highlight_weekend) this.highlightWeekends()\n    // highlight today's | week's | month's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      const x = this.computeGridHighlightDimensions(this.options.view_mode);\n      const y = 0;\n      const width = this.options.column_width;\n      const height =\n        (this.options.bar_height + this.options.padding) * this.tasks.length +\n        this.options.header_height +\n        this.options.padding / 2;\n\n      let className = \"\";\n      switch (this.options.view_mode) {\n        case VIEW_MODE.DAY:\n          className = \"today-highlight\";\n          break;\n        case VIEW_MODE.WEEK:\n          className = \"week-highlight\";\n          break;\n        case VIEW_MODE.MONTH:\n          className = \"month-highlight\";\n          break;\n        case VIEW_MODE.YEAR:\n          className = \"year-highlight\";\n          break;\n      }\n      createSVG(\"rect\", {\n        x,\n        y,\n        width,\n        height,\n        class: className,\n        append_to: this.layers.grid,\n      });\n    }\n  }\n\n  make_dates() {\n    for (let date of this.get_dates_to_draw()) {\n      createSVG(\"text\", {\n        x: date.lower_x,\n        y: date.lower_y,\n        innerHTML: date.lower_text,\n        class: \"lower-text\",\n        append_to: this.layers.date,\n      });\n\n      if (date.upper_text) {\n        const $upper_text = createSVG(\"text\", {\n          x: date.upper_x,\n          y: date.upper_y,\n          innerHTML: date.upper_text,\n          class: \"upper-text\",\n          append_to: this.layers.date,\n        });\n\n        // remove out-of-bound dates\n        if ($upper_text.getBBox().x2 > this.layers.grid.getBBox().width) {\n          $upper_text.remove();\n        }\n      }\n    }\n  }\n\n  get_dates_to_draw() {\n    let last_date = null;\n    const dates = this.dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = d;\n      return d;\n    });\n    return dates;\n  }\n\n  get_date_info(date, last_date_info, i) {\n    let last_date = last_date_info ? last_date_info.date : date_utils.add(date, 1, \"day\")\n\n    const date_text = {\n      Hour_lower: date_utils.format(date, \"HH\", this.options.language),\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : date_utils.format(date, \"D\", this.options.language),\n      Month_lower: date_utils.format(date, \"MMMM\", this.options.language),\n      Year_lower: date_utils.format(date, \"YYYY\", this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMMM\", this.options.language)\n          : \"\",\n      \"Quarter Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      \"Half Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date.getMonth() !== last_date.getMonth()\n            ? date_utils.format(date, \"D MMM\", this.options.language)\n            : date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Day_upper:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Week_upper:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Month_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n      Year_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n    };\n    let column_width = this.view_is(VIEW_MODE.MONTH) ? (date_utils.get_days_in_month(date) * this.options.column_width) / 30 : this.options.column_width;\n    const base_pos = {\n      x: last_date_info\n        ? last_date_info.base_pos_x + last_date_info.column_width\n        : 0,\n      lower_y: this.options.header_height,\n      upper_y: this.options.header_height - 25,\n    };\n\n    const x_pos = {\n      Hour_lower: this.options.column_width / 2,\n      Hour_upper: this.options.column_width * 12,\n      \"Quarter Day_lower\": this.options.column_width / 2,\n      \"Quarter Day_upper\": this.options.column_width * 2,\n      \"Half Day_lower\": this.options.column_width / 2,\n      \"Half Day_upper\": this.options.column_width,\n      Day_lower: this.options.column_width / 2,\n      Day_upper: (this.options.column_width * 30) / 2,\n      Week_lower: 0,\n      Week_upper: (this.options.column_width * 4) / 2,\n      Month_lower: column_width / 2,\n      Month_upper: (column_width * 12) / 2,\n      Year_lower: this.options.column_width / 2,\n      Year_upper: (this.options.column_width * 30) / 2,\n    };\n\n    return {\n      date,\n      column_width,\n      base_pos_x: base_pos.x,\n      upper_text: date_text[`${this.options.view_mode}_upper`],\n      lower_text: date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n    };\n  }\n\n  make_bars() {\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      this.layers.bar.appendChild(bar.group);\n      return bar;\n    });\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          this.layers.arrow.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_width() {\n    const cur_width = this.$svg.getBoundingClientRect().width;\n    const actual_width = this.$svg.querySelector('.grid .grid-row') ? this.$svg\n      .querySelector('.grid .grid-row')\n      .getAttribute('width') : 0;\n    if (cur_width < actual_width) {\n      this.$svg.setAttribute(\"width\", actual_width);\n    }\n  }\n\n  set_scroll_position(date) {\n    if (!date) {\n      date = this.gantt_start\n    }\n\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      this.get_oldest_starting_date(),\n      date,\n      \"hour\",\n    );\n\n    const scroll_pos =\n      (hours_before_first_task / this.options.step) *\n      this.options.column_width -\n      this.options.column_width;\n\n    parent_element.scrollLeft = scroll_pos;\n  }\n\n  scroll_today() {\n    const oldest = this.get_oldest_starting_date().getTime()\n    const t = new Date() - oldest\n    this.set_scroll_position(new Date(this.gantt_start.getTime() - t))\n  }\n\n  bind_grid_click() {\n    $.on(\n      this.$svg,\n      this.options.popup_trigger,\n      \".grid-row, .grid-header\",\n      () => {\n        this.unselect_all();\n        this.hide_popup();\n      },\n    );\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let x_on_scroll_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\n\n      if (element.classList.contains(\"left\")) {\n        is_resizing_left = true;\n      } else if (element.classList.contains(\"right\")) {\n        is_resizing_right = true;\n      } else if (element.classList.contains(\"bar-wrapper\")) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add(\"active\");\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\n      const ids = [\n        parent_bar_id,\n        ...this.get_all_dependent_tasks(parent_bar_id),\n      ];\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n    $.on(this.$container, 'scroll', e => {\n      let elements = document.querySelectorAll('.bar-wrapper');\n      let localBars = [];\n      const ids = [];\n      let dx;\n\n      this.layers.date.setAttribute('transform', 'translate(0,' + e.currentTarget.scrollTop + ')');\n      if (x_on_scroll_start) {\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n      }\n\n      Array.prototype.forEach.call(elements, function (el, i) {\n        ids.push(el.getAttribute('data-id'));\n      });\n\n      if (dx) {\n        localBars = ids.map(id => this.get_bar(id));\n\n        localBars.forEach(bar => {\n          bar.update_label_position_on_horizontal_scroll({ x: dx, sx: e.currentTarget.scrollLeft });\n        });\n      }\n\n      x_on_scroll_start = e.currentTarget.scrollLeft;\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        $bar.finaldx = this.get_snap_position(dx);\n        this.hide_popup();\n        if (is_resizing_left) {\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging && !this.options.readonly) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n      });\n    });\n\n    document.addEventListener(\"mouseup\", (e) => {\n      if (is_dragging || is_resizing_left || is_resizing_right) {\n        bars.forEach((bar) => bar.group.classList.remove(\"active\"));\n      }\n\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$svg, \"mouseup\", (e) => {\n      this.bar_being_dragged = null;\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    this.bind_bar_progress();\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\n      const id = $bar_wrapper.getAttribute(\"data-id\");\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n\n      $bar_progress.finaldx = 0;\n      bar.progress_changed();\n      bar.set_action_completed();\n      bar = null;\n      $bar_progress = null;\n      $bar = null;\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.view_is(VIEW_MODE.WEEK)) {\n      rem = dx % (this.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 14\n          ? 0\n          : this.options.column_width / 7);\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      rem = dx % (this.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 60\n          ? 0\n          : this.options.column_width / 30);\n    } else {\n      rem = dx % this.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\n    }\n    return position;\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\n      el.classList.remove(\"active\");\n    });\n  }\n\n  view_is(modes) {\n    if (typeof modes === \"string\") {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id;\n    });\n  }\n\n  show_popup(options) {\n    if (!this.popup) {\n      this.popup = new Popup(\n        this.popup_wrapper,\n        this.options.custom_popup_html,\n      );\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options[\"on_\" + event]) {\n      this.options[\"on_\" + event].apply(null, args);\n    }\n  }\n\n  /**\n   * Gets the oldest starting date from the list of tasks\n   *\n   * @returns Date\n   * @memberof Gantt\n   */\n  get_oldest_starting_date() {\n    if (!this.tasks.length) return new Date()\n    return this.tasks\n      .map((task) => task._start)\n      .reduce((prev_date, cur_date) =>\n        cur_date <= prev_date ? cur_date : prev_date,\n      );\n  }\n\n  /**\n   * Clear all elements from the parent svg element\n   *\n   * @memberof Gantt\n   */\n  clear() {\n    this.$svg.innerHTML = \"\";\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","SHORTENED","January","February","March","April","May","June","July","August","September","October","November","December","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","group","class","custom_class","important","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","thumbnail","draw_thumbnail","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","_start","gantt_start","step","$date_highlight","header_height","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","in_action","trigger_event","screenX","screenY","popup_trigger","hide_popup","remove","show_popup","offsetX","unselect_all","bar_being_dragged","subtitle","language","_end","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","label","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","width_in_units","task_start","view_is","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","x_offset_label_img","labelWidth","barWidth","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","position_meta","HTMLElement","getBoundingClientRect","top","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","VIEW_MODE_PADDING","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","highlight_weekend","scroll_today","assign","view_mode_padding","entries","start","undefined","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","viewKey","padding_start","padding_end","setHours","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","rows_layer","grid","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","xDist","todayDate","startDate","endDate","setMonth","setFullYear","className","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","last_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","oldest","getTime","is_dragging","x_on_start","x_on_scroll_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","elements","querySelectorAll","localBars","currentTarget","scrollTop","Array","el","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","modes","isArray","some","find","popup","args","apply","prev_date"],"mappings":"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"}