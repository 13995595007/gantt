{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9])+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] - 1;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length == 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(+values[1] + 1, 2, 0),\n      DD: values[2],\n      HH: values[3],\n      mm: values[4],\n      ss: values[5],\n      SSS: values[6],\n      D: values[2],\n      MMMM: month_name_capitalized,\n      MMM: month_name_capitalized,\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replace(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replace(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else if (attr === 'clipPath') {\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_values() {\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.image_size = this.height - 5;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper \" + (this.task.custom_class || \"\"),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  draw() {\n    this.draw_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_progress_bar();\n    this.draw_label();\n    this.draw_resize_handles();\n\n    if (this.task.thumbnail) {\n      this.draw_thumbnail();\n    }\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    let x_coord = this.x + 5;\n\n    if (this.task.thumbnail) {\n      x_coord = this.x + this.image_size + 5;\n    }\n\n    createSVG(\"text\", {\n      x: x_coord,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n  draw_thumbnail() {\n    let x_offset = 10, y_offset = 2;\n    let defs, clipPath;\n\n    defs = createSVG('defs', {\n      append_to: this.bar_group\n    });\n\n    createSVG('rect', {\n      id: 'rect_' + this.task.id,\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      rx: '15',\n      class: 'img_mask',\n      append_to: defs\n    });\n\n    clipPath = createSVG('clipPath', {\n      id: 'clip_' + this.task.id,\n      append_to: defs\n    });\n\n    createSVG('use', {\n      href: '#rect_' + this.task.id,\n      append_to: clipPath\n    });\n\n    createSVG('image', {\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      class: 'bar-img',\n      href: this.task.thumbnail,\n      clipPath: 'clip_' + this.task.id,\n      append_to: this.bar_group\n    });\n  }\n\n  draw_resize_handles() {\n    if (this.invalid || this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = 8;\n\n    createSVG(\"rect\", {\n      x: bar.getX() + bar.getWidth() - 9,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() + 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    this.$handle_progress = createSVG(\"polygon\", {\n      points: this.get_progress_polygon_points().join(\",\"),\n      class: \"handle progress\",\n      append_to: this.handle_group,\n    });\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    return [\n      bar_progress.getEndX() - 5,\n      bar_progress.getY() + bar_progress.getHeight(),\n      bar_progress.getEndX() + 5,\n      bar_progress.getY() + bar_progress.getHeight(),\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() - 8.66,\n    ];\n  }\n\n  bind() {\n    if (this.invalid) return;\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    $.on(this.group, \"focus \" + this.gantt.options.popup_trigger, (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      this.show_popup();\n      this.gantt.unselect_all();\n      this.group.classList.add(\"active\");\n    });\n\n    $.on(this.group, \"dblclick\", (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      this.gantt.trigger_event(\"click\", [this.task]);\n    });\n  }\n\n  show_popup() {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const subtitle = start_date + \" - \" + end_date;\n\n    this.gantt.show_popup({\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x) {\n      // get all x values of parent task\n      const xs = this.task.dependencies.map((dep) => {\n        return this.gantt.get_bar(dep).$bar.getX();\n      });\n      // child task must not go before parent\n      const valid_x = xs.reduce((prev, curr) => {\n        return x >= curr;\n      }, x);\n      if (!valid_x) {\n        width = null;\n        return;\n      }\n      this.update_attr(bar, \"x\", x);\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  update_label_position_on_horizontal_scroll({ x, sx }) {\n    const container = document.querySelector('.gantt-container');\n    const label = this.group.querySelector('.bar-label');\n    const img = this.group.querySelector('.bar-img') || '';\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n    let newLabelX = label.getX() + x;\n    let newImgX = img && img.getX() + x || 0;\n    let imgWidth = img && img.getBBox().width + 7 || 7;\n    let labelEndX = newLabelX + label.getBBox().width + 7;\n    let viewportCentral = sx + container.clientWidth / 2;\n\n    if (label.classList.contains('big')) return;\n\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n\n    }\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 1000);\n  }\n\n  compute_start_end_date() {\n    const bar = this.$bar;\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\n    const new_start_date = date_utils.add(\n      this.gantt.gantt_start,\n      x_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n    const new_end_date = date_utils.add(\n      new_start_date,\n      width_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(\"Month\")) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    this.y =\n      this.gantt.options.header_height +\n      this.gantt.options.padding +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.gantt.view_is(\"Week\")) {\n      rem = dx % (this.gantt.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 14\n          ? 0\n          : this.gantt.options.column_width / 7);\n    } else if (this.gantt.view_is(\"Month\")) {\n      rem = dx % (this.gantt.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 60\n          ? 0\n          : this.gantt.options.column_width / 30);\n    } else {\n      rem = dx % this.gantt.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 2\n          ? 0\n          : this.gantt.options.column_width);\n    }\n    return position;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (this.invalid) return;\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n  }\n\n  update_label_position() {\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\"),\n      img = this.group.querySelector('.bar-img');\n\n    let padding = 5;\n    let x_offset_label_img = this.image_size + 10;\n\n    if (label.getBBox().width > bar.getWidth()) {\n      label.classList.add(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + bar.getWidth() + padding);\n        img_mask.setAttribute('x', bar.getX() + bar.getWidth() + padding);\n        label.setAttribute('x', bar.getX() + bar.getWidth() + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + bar.getWidth() + padding);\n      }\n    } else {\n      label.classList.remove(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + padding);\n        img_mask.setAttribute('x', bar.getX() + padding);\n        label.setAttribute('x', bar.getX() + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + padding);\n      }\n    }\n  }\n\n  update_handle_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    const bar = this.$bar;\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() + 1);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() - 9);\n    const handle = this.group.querySelector(\".handle.progress\");\n    handle && handle.setAttribute(\"points\", this.get_progress_polygon_points());\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === \"[object Function]\"\n  );\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n  }\n\n  calculate_path() {\n    let start_x =\n      this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n    const condition = () =>\n      this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n      start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n    while (condition()) {\n      start_x -= 10;\n    }\n\n    const start_y =\n      this.gantt.options.header_height +\n      this.gantt.options.bar_height +\n      (this.gantt.options.padding + this.gantt.options.bar_height) *\n        this.from_task.task._index +\n      this.gantt.options.padding;\n\n    const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n    const end_y =\n      this.gantt.options.header_height +\n      this.gantt.options.bar_height / 2 +\n      (this.gantt.options.padding + this.gantt.options.bar_height) *\n        this.to_task.task._index +\n      this.gantt.options.padding;\n\n    const from_is_below_to =\n      this.from_task.task._index > this.to_task.task._index;\n    const curve = this.gantt.options.arrow_curve;\n    const clockwise = from_is_below_to ? 1 : 0;\n    const curve_y = from_is_below_to ? -curve : curve;\n    const offset = from_is_below_to\n      ? end_y + this.gantt.options.arrow_curve\n      : end_y - this.gantt.options.arrow_curve;\n\n    this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n    if (\n      this.to_task.$bar.getX() <\n      this.from_task.$bar.getX() + this.gantt.options.padding\n    ) {\n      const down_1 = this.gantt.options.padding / 2 - curve;\n      const down_2 =\n        this.to_task.$bar.getY() + this.to_task.$bar.getHeight() / 2 - curve_y;\n      const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n      this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n    }\n  }\n\n  draw() {\n    this.element = createSVG(\"path\", {\n      d: this.path,\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  update() {\n    this.calculate_path();\n    this.element.setAttribute(\"d\", this.path);\n  }\n}\n","export default class Popup {\n  constructor(parent, custom_html) {\n    this.parent = parent;\n    this.custom_html = custom_html;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    if (!options.position) {\n      options.position = \"left\";\n    }\n    const target_element = options.target_element;\n\n    if (this.custom_html) {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n      this.parent.style.width = this.parent.clientWidth + \"px\";\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = options.target_element.getBBox();\n    }\n\n    if (options.position === \"left\") {\n      this.parent.style.left =\n        position_meta.x + (position_meta.width + 10) + \"px\";\n      this.parent.style.top = position_meta.y + \"px\";\n\n      this.pointer.style.transform = \"rotateZ(90deg)\";\n      this.pointer.style.left = \"-7px\";\n      this.pointer.style.top = \"2px\";\n    }\n\n    // show\n    this.parent.style.opacity = 1;\n  }\n\n  hide() {\n    this.parent.style.opacity = 0;\n    this.parent.style.left = 0;\n  }\n}\n","import date_utils from \"./date_utils\";\nimport { $, createSVG } from \"./svg_utils\";\nimport Bar from \"./bar\";\nimport Arrow from \"./arrow\";\nimport Popup from \"./popup\";\n\nimport \"./gantt.scss\";\n\nconst VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  YEAR: \"Year\",\n};\n\nconst VIEW_MODE_PADDING = {\n  HOUR: [\"7d\", \"7d\"],\n  QUARTER_DAY: [\"7d\", \"7d\"],\n  HALF_DAY: [\"7d\", \"7d\"],\n  DAY: [\"1m\", \"1m\"],\n  WEEK: [\"1m\", \"1m\"],\n  MONTH: [\"1m\", \"1m\"],\n  YEAR: [\"2y\", \"2y\"],\n};\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n    let svg_element, wrapper_element;\n\n    // CSS Selector is passed\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n\n    // get the SVGElement\n    if (element instanceof HTMLElement) {\n      wrapper_element = element;\n      svg_element = element.querySelector(\"svg\");\n    } else if (element instanceof SVGElement) {\n      svg_element = element;\n    } else {\n      throw new TypeError(\n        \"Frappé Gantt only supports usage of a string CSS selector,\" +\n        \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n      );\n    }\n\n    // svg element\n    if (!svg_element) {\n      // create it\n      this.$svg = createSVG(\"svg\", {\n        append_to: wrapper_element,\n        class: \"gantt\",\n      });\n    } else {\n      this.$svg = svg_element;\n      this.$svg.classList.add(\"gantt\");\n    }\n\n    // wrapper element\n    this.$container = document.createElement(\"div\");\n    this.$container.classList.add(\"gantt-container\");\n\n    const parent_element = this.$svg.parentElement;\n    parent_element.appendChild(this.$container);\n    this.$container.appendChild(this.$svg);\n\n    // popup wrapper\n    this.popup_wrapper = document.createElement(\"div\");\n    this.popup_wrapper.classList.add(\"popup-wrapper\");\n    this.$container.appendChild(this.popup_wrapper);\n  }\n\n  setup_options(options) {\n    const default_options = {\n      header_height: 50,\n      column_width: 30,\n      step: 24,\n      view_modes: [...Object.values(VIEW_MODE)],\n      bar_height: 30,\n      bar_corner_radius: 3,\n      arrow_curve: 5,\n      padding: 18,\n      view_mode: \"Day\",\n      date_format: \"YYYY-MM-DD\",\n      popup_trigger: \"click\",\n      custom_popup_html: null,\n      language: \"en\",\n      readonly: false,\n      highlight_weekend: true,\n    };\n    this.options = Object.assign({}, default_options, options);\n    if (!options.view_mode_padding) options.view_mode_padding = {}\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === \"string\") {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      // convert to Date objects\n      task._start = date_utils.parse(task.start);\n      if (task.end === undefined && task.duration !== undefined) {\n        task.end = task._start;\n        let durations = task.duration.split(\" \");\n\n        durations.forEach((tmpDuration) => {\n          let { duration, scale } = date_utils.parse_duration(tmpDuration);\n          task.end = date_utils.add(task.end, duration, scale);\n        });\n      }\n      task._end = date_utils.parse(task.end);\n\n      // make task invalid if duration too large\n      if (date_utils.diff(task._end, task._start, \"year\") > 10) {\n        task.end = null;\n      }\n\n      // cache index\n      task._index = i;\n\n      // invalid dates\n      if (!task.start && !task.end) {\n        const today = date_utils.today();\n        task._start = today;\n        task._end = date_utils.add(today, 2, \"day\");\n      }\n\n      if (!task.start && task.end) {\n        task._start = date_utils.add(task._end, -2, \"day\");\n      }\n\n      if (task.start && !task.end) {\n        task._end = date_utils.add(task._start, 2, \"day\");\n      }\n\n      // if hours is not set, assume the last day is full day\n      // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n      const task_end_values = date_utils.get_date_values(task._end);\n      if (task_end_values.slice(3).every((d) => d === 0)) {\n        task._end = date_utils.add(task._end, 24, \"hour\");\n      }\n\n      // invalid flag\n      if (!task.start || !task.end) {\n        task.invalid = true;\n      }\n\n      // dependencies\n      if (typeof task.dependencies === \"string\" || !task.dependencies) {\n        let deps = [];\n        if (task.dependencies) {\n          deps = task.dependencies\n            .split(\",\")\n            .map((d) => d.trim())\n            .filter((d) => d);\n        }\n        task.dependencies = deps;\n      }\n\n      // uids\n      if (!task.id) {\n        task.id = generate_id(task);\n      } else if (typeof task.id === 'string') {\n        task.id = task.id.replace(' ', '_')\n      } else {\n        task.id = `${task.id}`\n      }\n\n      return task;\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      for (let d of t.dependencies) {\n        this.dependency_map[d] = this.dependency_map[d] || [];\n        this.dependency_map[d].push(t.id);\n      }\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    // fire viewmode_change event\n    this.trigger_event(\"view_change\", [mode]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 120;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 120;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (!this.gantt_start || task._start < this.gantt_start) {\n        this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || task._end > this.gantt_end) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, \"day\");\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, \"day\");\n\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n\n    this.gantt_start = date_utils.add(\n      gantt_start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      format_string = \"YYYY\"\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      format_string = \"YYYY-MM\"\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n      format_string = \"YYYY-MM-DD\"\n    } else {\n      format_string = \"YYYY-MM-DD HH\"\n    }\n\n    this.gantt_start = new Date(\n      date_utils.format(\n        date_utils.add(gantt_start, -padding_end.duration, padding_end.scale),\n        format_string\n      )\n    );\n    this.gantt_start.setHours(0, 0, 0, 0)\n\n    this.gantt_end = date_utils.add(\n      gantt_end,\n      padding_end.duration,\n      padding_end.scale,\n    );\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, \"year\");\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, \"month\");\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  bind_events() {\n    if (this.options.readonly) return\n    this.bind_grid_click();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_width();\n    this.set_scroll_position();\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = [\"grid\", \"arrow\", \"progress\", \"bar\", \"details\", \"date\"];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG(\"g\", {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n    this.make_grid_ticks();\n    this.make_grid_highlights();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    const grid_height =\n      this.options.header_height +\n      this.options.padding +\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: \"grid-background\",\n      append_to: this.layers.date,\n    });\n\n    $.attr(this.$svg, {\n      height: grid_height + this.options.padding + 100,\n      width: \"100%\",\n    });\n  }\n\n  make_grid_rows() {\n    const rows_layer = createSVG(\"g\", { append_to: this.layers.grid });\n    const lines_layer = createSVG(\"g\", { append_to: this.layers.grid });\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    let row_y = this.options.header_height + this.options.padding / 2;\n\n    for (let task of this.tasks) {\n      createSVG(\"rect\", {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: \"grid-row\",\n        append_to: rows_layer,\n      });\n\n      createSVG(\"line\", {\n        x1: 0,\n        y1: row_y + row_height,\n        x2: row_width,\n        y2: row_y + row_height,\n        class: \"row-line\",\n        append_to: lines_layer,\n      });\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n  }\n\n  make_grid_header() {\n    const header_width = this.dates.length * this.options.column_width;\n    const header_height = this.options.header_height + 10;\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: header_width,\n      height: header_height,\n      class: \"grid-header\",\n      append_to: this.layers.grid,\n    });\n  }\n\n  make_grid_ticks() {\n    let tick_x = 0;\n    let tick_y = this.options.header_height + this.options.padding / 2;\n    let tick_height =\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    for (let date of this.dates) {\n      let tick_class = \"tick\";\n      // thick tick for monday\n      if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n        tick_class += \" thick\";\n      }\n      // thick tick for first week\n      if (\n        this.view_is(VIEW_MODE.WEEK) &&\n        date.getDate() >= 1 &&\n        date.getDate() < 8\n      ) {\n        tick_class += \" thick\";\n      }\n      // thick ticks for quarters\n      if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n        tick_class += \" thick\";\n      }\n\n      createSVG(\"path\", {\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n        class: tick_class,\n        append_to: this.layers.grid,\n      });\n\n      if (this.view_is(VIEW_MODE.MONTH)) {\n        tick_x +=\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\n      } else {\n        tick_x += this.options.column_width;\n      }\n    }\n  }\n\n  highlightWeekends() {\n    for (let d = new Date(this.gantt_start); d <= this.gantt_end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() == 0 || d.getDay() == 6) {\n        const x = (date_utils.diff(d, this.gantt_start, 'hour') /\n          this.options.step) *\n          this.options.column_width;\n        const height =\n          (this.options.bar_height + this.options.padding) * this.tasks.length +\n          this.options.header_height +\n          this.options.padding / 2;\n        createSVG('rect', {\n          x,\n          y: 0,\n          width: this.options.column_width,\n          height,\n          class: 'holiday-highlight',\n          append_to: this.layers.grid,\n        });\n      }\n    }\n  }\n\n  //compute the horizontal x distance\n  computeGridHighlightDimensions(view_mode) {\n    let xDist = 0;\n\n    if (this.view_is(VIEW_MODE.DAY)) {\n      return (\n        (date_utils.diff(date_utils.today(), this.gantt_start, \"hour\") /\n          this.options.step) *\n        this.options.column_width\n      );\n    }\n\n    for (let date of this.dates) {\n      const todayDate = new Date();\n      const startDate = new Date(date);\n      const endDate = new Date(date);\n      switch (view_mode) {\n        case VIEW_MODE.WEEK:\n          endDate.setDate(date.getDate() + 7);\n          break;\n        case VIEW_MODE.MONTH:\n          endDate.setMonth(date.getMonth() + 1);\n          break;\n        case VIEW_MODE.YEAR:\n          endDate.setFullYear(date.getFullYear() + 1);\n          break;\n      }\n      if (todayDate >= startDate && todayDate <= endDate) {\n        break;\n      } else {\n        xDist += this.options.column_width;\n      }\n    }\n    return xDist;\n  }\n\n  make_grid_highlights() {\n    if (this.options.highlight_weekend) this.highlightWeekends()\n    // highlight today's | week's | month's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      const x = this.computeGridHighlightDimensions(this.options.view_mode);\n      const y = 0;\n      const width = this.options.column_width;\n      const height =\n        (this.options.bar_height + this.options.padding) * this.tasks.length +\n        this.options.header_height +\n        this.options.padding / 2;\n\n      let className = \"\";\n      switch (this.options.view_mode) {\n        case VIEW_MODE.DAY:\n          className = \"today-highlight\";\n          break;\n        case VIEW_MODE.WEEK:\n          className = \"week-highlight\";\n          break;\n        case VIEW_MODE.MONTH:\n          className = \"month-highlight\";\n          break;\n        case VIEW_MODE.YEAR:\n          className = \"year-highlight\";\n          break;\n      }\n      createSVG(\"rect\", {\n        x,\n        y,\n        width,\n        height,\n        class: className,\n        append_to: this.layers.grid,\n      });\n    }\n  }\n\n  make_dates() {\n    for (let date of this.get_dates_to_draw()) {\n      createSVG(\"text\", {\n        x: date.lower_x,\n        y: date.lower_y,\n        innerHTML: date.lower_text,\n        class: \"lower-text\",\n        append_to: this.layers.date,\n      });\n\n      if (date.upper_text) {\n        const $upper_text = createSVG(\"text\", {\n          x: date.upper_x,\n          y: date.upper_y,\n          innerHTML: date.upper_text,\n          class: \"upper-text\",\n          append_to: this.layers.date,\n        });\n\n        // remove out-of-bound dates\n        if ($upper_text.getBBox().x2 > this.layers.grid.getBBox().width) {\n          $upper_text.remove();\n        }\n      }\n    }\n  }\n\n  get_dates_to_draw() {\n    let last_date = null;\n    const dates = this.dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = date;\n      return d;\n    });\n    return dates;\n  }\n\n  get_date_info(date, last_date, i) {\n    if (!last_date) {\n      last_date = date_utils.add(date, 1, \"day\");\n    }\n    const date_text = {\n      Hour_lower: date_utils.format(date, \"HH\", this.options.language),\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : date_utils.format(date, \"D\", this.options.language),\n      Month_lower: date_utils.format(date, \"MMMM\", this.options.language),\n      Year_lower: date_utils.format(date, \"YYYY\", this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMMM\", this.options.language)\n          : \"\",\n      \"Quarter Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      \"Half Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date.getMonth() !== last_date.getMonth()\n            ? date_utils.format(date, \"D MMM\", this.options.language)\n            : date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Day_upper:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Week_upper:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Month_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n      Year_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n    };\n\n    const base_pos = {\n      x: i * this.options.column_width,\n      lower_y: this.options.header_height,\n      upper_y: this.options.header_height - 25,\n    };\n\n    const x_pos = {\n      Hour_lower: this.options.column_width / 2,\n      Hour_upper: this.options.column_width * 12,\n      \"Quarter Day_lower\": this.options.column_width / 2,\n      \"Quarter Day_upper\": this.options.column_width * 2,\n      \"Half Day_lower\": this.options.column_width / 2,\n      \"Half Day_upper\": this.options.column_width,\n      Day_lower: this.options.column_width / 2,\n      Day_upper: (this.options.column_width * 30) / 2,\n      Week_lower: 0,\n      Week_upper: (this.options.column_width * 4) / 2,\n      Month_lower: this.options.column_width / 2,\n      Month_upper: (this.options.column_width * 12) / 2,\n      Year_lower: this.options.column_width / 2,\n      Year_upper: (this.options.column_width * 30) / 2,\n    };\n\n    return {\n      upper_text: date_text[`${this.options.view_mode}_upper`],\n      lower_text: date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n    };\n  }\n\n  make_bars() {\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      this.layers.bar.appendChild(bar.group);\n      return bar;\n    });\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          this.layers.arrow.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_width() {\n    const cur_width = this.$svg.getBoundingClientRect().width;\n    const actual_width = this.$svg.querySelector('.grid .grid-row') ? this.$svg\n      .querySelector('.grid .grid-row')\n      .getAttribute('width') : 0;\n    if (cur_width < actual_width) {\n      this.$svg.setAttribute(\"width\", actual_width);\n    }\n  }\n\n  set_scroll_position() {\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      this.get_oldest_starting_date(),\n      this.gantt_start,\n      \"hour\",\n    );\n\n    const scroll_pos =\n      (hours_before_first_task / this.options.step) *\n      this.options.column_width -\n      this.options.column_width;\n\n    parent_element.scrollLeft = scroll_pos;\n  }\n\n  bind_grid_click() {\n    $.on(\n      this.$svg,\n      this.options.popup_trigger,\n      \".grid-row, .grid-header\",\n      () => {\n        this.unselect_all();\n        this.hide_popup();\n      },\n    );\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let x_on_scroll_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\n\n      if (element.classList.contains(\"left\")) {\n        is_resizing_left = true;\n      } else if (element.classList.contains(\"right\")) {\n        is_resizing_right = true;\n      } else if (element.classList.contains(\"bar-wrapper\")) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add(\"active\");\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\n      const ids = [\n        parent_bar_id,\n        ...this.get_all_dependent_tasks(parent_bar_id),\n      ];\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n    $.on(this.$container, 'scroll', e => {\n      let elements = document.querySelectorAll('.bar-wrapper');\n      let localBars = [];\n      const ids = [];\n      let dx;\n\n      this.layers.date.setAttribute('transform', 'translate(0,' + e.currentTarget.scrollTop + ')');\n      if (x_on_scroll_start) {\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n      }\n\n      Array.prototype.forEach.call(elements, function (el, i) {\n        ids.push(el.getAttribute('data-id'));\n      });\n\n      if (dx) {\n        localBars = ids.map(id => this.get_bar(id));\n\n        localBars.forEach(bar => {\n          bar.update_label_position_on_horizontal_scroll({ x: dx, sx: e.currentTarget.scrollLeft });\n        });\n      }\n\n      x_on_scroll_start = e.currentTarget.scrollLeft;\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        $bar.finaldx = this.get_snap_position(dx);\n        this.hide_popup();\n        if (is_resizing_left) {\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging && !this.options.readonly) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n      });\n    });\n\n    document.addEventListener(\"mouseup\", (e) => {\n      if (is_dragging || is_resizing_left || is_resizing_right) {\n        bars.forEach((bar) => bar.group.classList.remove(\"active\"));\n      }\n\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$svg, \"mouseup\", (e) => {\n      this.bar_being_dragged = null;\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    this.bind_bar_progress();\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\n      const id = $bar_wrapper.getAttribute(\"data-id\");\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n      bar.progress_changed();\n      bar.set_action_completed();\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.view_is(VIEW_MODE.WEEK)) {\n      rem = dx % (this.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 14\n          ? 0\n          : this.options.column_width / 7);\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      rem = dx % (this.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 60\n          ? 0\n          : this.options.column_width / 30);\n    } else {\n      rem = dx % this.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\n    }\n    return position;\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\n      el.classList.remove(\"active\");\n    });\n  }\n\n  view_is(modes) {\n    if (typeof modes === \"string\") {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id == id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id == id;\n    });\n  }\n\n  show_popup(options) {\n    if (!this.popup) {\n      this.popup = new Popup(\n        this.popup_wrapper,\n        this.options.custom_popup_html,\n      );\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options[\"on_\" + event]) {\n      this.options[\"on_\" + event].apply(null, args);\n    }\n  }\n\n  /**\n   * Gets the oldest starting date from the list of tasks\n   *\n   * @returns Date\n   * @memberof Gantt\n   */\n  get_oldest_starting_date() {\n    if (!this.tasks.length) return new Date()\n    return this.tasks\n      .map((task) => task._start)\n      .reduce((prev_date, cur_date) =>\n        cur_date <= prev_date ? cur_date : prev_date,\n      );\n  }\n\n  /**\n   * Clear all elements from the parent svg element\n   *\n   * @memberof Gantt\n   */\n  clear() {\n    this.$svg.innerHTML = \"\";\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","show_expected_progress","draw_expected_progress_bar","draw_progress_bar","draw_label","draw_resize_handles","thumbnail","draw_thumbnail","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","_start","language","_end","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","label","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","step","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","x_offset_label_img","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","VIEW_MODE_PADDING","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","highlight_weekend","assign","view_mode_padding","entries","start","undefined","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","viewKey","padding_start","padding_end","setHours","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","rows_layer","grid","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","xDist","todayDate","startDate","endDate","setMonth","setFullYear","className","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","x_on_scroll_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","elements","querySelectorAll","localBars","currentTarget","scrollTop","Array","el","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","modes","isArray","some","find","popup","args","apply","prev_date"],"mappings":"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"}