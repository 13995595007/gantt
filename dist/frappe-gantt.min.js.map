{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9])+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] - 1;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length == 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(+values[1] + 1, 2, 0),\n      DD: values[2],\n      HH: values[3],\n      mm: values[4],\n      ss: values[5],\n      SSS: values[6],\n      D: values[2],\n      MMMM: month_name_capitalized,\n      MMM: month_name_capitalized,\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replace(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replace(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_values() {\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper \" + (this.task.custom_class || \"\"),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  draw() {\n    this.draw_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_progress_bar();\n    this.draw_label();\n    this.draw_resize_handles();\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    createSVG(\"text\", {\n      x: this.x + this.width / 2,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n\n  draw_resize_handles() {\n    if (this.invalid || this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = 8;\n\n    createSVG(\"rect\", {\n      x: bar.getX() + bar.getWidth() - 9,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() + 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    this.$handle_progress = createSVG(\"polygon\", {\n      points: this.get_progress_polygon_points().join(\",\"),\n      class: \"handle progress\",\n      append_to: this.handle_group,\n    });\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    return [\n      bar_progress.getEndX() - 5,\n      bar_progress.getY() + bar_progress.getHeight(),\n      bar_progress.getEndX() + 5,\n      bar_progress.getY() + bar_progress.getHeight(),\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() - 8.66,\n    ];\n  }\n\n  bind() {\n    if (this.invalid) return;\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    $.on(this.group, \"focus \" + this.gantt.options.popup_trigger, (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      this.show_popup();\n      this.gantt.unselect_all();\n      this.group.classList.add(\"active\");\n    });\n\n    $.on(this.group, \"dblclick\", (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      this.gantt.trigger_event(\"click\", [this.task]);\n    });\n  }\n\n  show_popup() {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const subtitle = start_date + \" - \" + end_date;\n\n    this.gantt.show_popup({\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x) {\n      // get all x values of parent task\n      const xs = this.task.dependencies.map((dep) => {\n        return this.gantt.get_bar(dep).$bar.getX();\n      });\n      // child task must not go before parent\n      const valid_x = xs.reduce((prev, curr) => {\n        return x >= curr;\n      }, x);\n      if (!valid_x) {\n        width = null;\n        return;\n      }\n      this.update_attr(bar, \"x\", x);\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 1000);\n  }\n\n  compute_start_end_date() {\n    const bar = this.$bar;\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\n    const new_start_date = date_utils.add(\n      this.gantt.gantt_start,\n      x_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n    const new_end_date = date_utils.add(\n      new_start_date,\n      width_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(\"Month\")) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    this.y =\n      this.gantt.options.header_height +\n      this.gantt.options.padding +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.gantt.view_is(\"Week\")) {\n      rem = dx % (this.gantt.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 14\n          ? 0\n          : this.gantt.options.column_width / 7);\n    } else if (this.gantt.view_is(\"Month\")) {\n      rem = dx % (this.gantt.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 60\n          ? 0\n          : this.gantt.options.column_width / 30);\n    } else {\n      rem = dx % this.gantt.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 2\n          ? 0\n          : this.gantt.options.column_width);\n    }\n    return position;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (this.invalid) return;\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.invalid) return;\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n  }\n\n  update_label_position() {\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\");\n\n    if (label.getBBox().width > bar.getWidth()) {\n      label.classList.add(\"big\");\n      label.setAttribute(\"x\", bar.getX() + bar.getWidth() + 5);\n    } else {\n      label.classList.remove(\"big\");\n      label.setAttribute(\"x\", bar.getX() + bar.getWidth() / 2);\n    }\n  }\n\n  update_handle_position() {\n    if (this.invalid) return;\n    const bar = this.$bar;\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() + 1);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() - 9);\n    const handle = this.group.querySelector(\".handle.progress\");\n    handle && handle.setAttribute(\"points\", this.get_progress_polygon_points());\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === \"[object Function]\"\n  );\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n  }\n\n  calculate_path() {\n    let start_x =\n      this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n    const condition = () =>\n      this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n      start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n    while (condition()) {\n      start_x -= 10;\n    }\n\n    const start_y =\n      this.gantt.options.header_height +\n      this.gantt.options.bar_height +\n      (this.gantt.options.padding + this.gantt.options.bar_height) *\n        this.from_task.task._index +\n      this.gantt.options.padding;\n\n    const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n    const end_y =\n      this.gantt.options.header_height +\n      this.gantt.options.bar_height / 2 +\n      (this.gantt.options.padding + this.gantt.options.bar_height) *\n        this.to_task.task._index +\n      this.gantt.options.padding;\n\n    const from_is_below_to =\n      this.from_task.task._index > this.to_task.task._index;\n    const curve = this.gantt.options.arrow_curve;\n    const clockwise = from_is_below_to ? 1 : 0;\n    const curve_y = from_is_below_to ? -curve : curve;\n    const offset = from_is_below_to\n      ? end_y + this.gantt.options.arrow_curve\n      : end_y - this.gantt.options.arrow_curve;\n\n    this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n    if (\n      this.to_task.$bar.getX() <\n      this.from_task.$bar.getX() + this.gantt.options.padding\n    ) {\n      const down_1 = this.gantt.options.padding / 2 - curve;\n      const down_2 =\n        this.to_task.$bar.getY() + this.to_task.$bar.getHeight() / 2 - curve_y;\n      const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n      this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n    }\n  }\n\n  draw() {\n    this.element = createSVG(\"path\", {\n      d: this.path,\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  update() {\n    this.calculate_path();\n    this.element.setAttribute(\"d\", this.path);\n  }\n}\n","export default class Popup {\n  constructor(parent, custom_html) {\n    this.parent = parent;\n    this.custom_html = custom_html;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    if (!options.position) {\n      options.position = \"left\";\n    }\n    const target_element = options.target_element;\n\n    if (this.custom_html) {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n      this.parent.style.width = this.parent.clientWidth + \"px\";\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = options.target_element.getBBox();\n    }\n\n    if (options.position === \"left\") {\n      this.parent.style.left =\n        position_meta.x + (position_meta.width + 10) + \"px\";\n      this.parent.style.top = position_meta.y + \"px\";\n\n      this.pointer.style.transform = \"rotateZ(90deg)\";\n      this.pointer.style.left = \"-7px\";\n      this.pointer.style.top = \"2px\";\n    }\n\n    // show\n    this.parent.style.opacity = 1;\n  }\n\n  hide() {\n    this.parent.style.opacity = 0;\n    this.parent.style.left = 0;\n  }\n}\n","import date_utils from \"./date_utils\";\nimport { $, createSVG } from \"./svg_utils\";\nimport Bar from \"./bar\";\nimport Arrow from \"./arrow\";\nimport Popup from \"./popup\";\n\nimport \"./gantt.scss\";\n\nconst VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  YEAR: \"Year\",\n};\n\nconst VIEW_MODE_PADDING = {\n  HOUR: [\"7d\", \"7d\"],\n  QUARTER_DAY: [\"7d\", \"7d\"],\n  HALF_DAY: [\"7d\", \"7d\"],\n  DAY: [\"1m\", \"1m\"],\n  WEEK: [\"1m\", \"1m\"],\n  MONTH: [\"1m\", \"1m\"],\n  YEAR: [\"2y\", \"2y\"],\n};\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n    let svg_element, wrapper_element;\n\n    // CSS Selector is passed\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n\n    // get the SVGElement\n    if (element instanceof HTMLElement) {\n      wrapper_element = element;\n      svg_element = element.querySelector(\"svg\");\n    } else if (element instanceof SVGElement) {\n      svg_element = element;\n    } else {\n      throw new TypeError(\n        \"Frappé Gantt only supports usage of a string CSS selector,\" +\n        \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n      );\n    }\n\n    // svg element\n    if (!svg_element) {\n      // create it\n      this.$svg = createSVG(\"svg\", {\n        append_to: wrapper_element,\n        class: \"gantt\",\n      });\n    } else {\n      this.$svg = svg_element;\n      this.$svg.classList.add(\"gantt\");\n    }\n\n    // wrapper element\n    this.$container = document.createElement(\"div\");\n    this.$container.classList.add(\"gantt-container\");\n\n    const parent_element = this.$svg.parentElement;\n    parent_element.appendChild(this.$container);\n    this.$container.appendChild(this.$svg);\n\n    // popup wrapper\n    this.popup_wrapper = document.createElement(\"div\");\n    this.popup_wrapper.classList.add(\"popup-wrapper\");\n    this.$container.appendChild(this.popup_wrapper);\n  }\n\n  setup_options(options) {\n    const default_options = {\n      header_height: 50,\n      column_width: 30,\n      step: 24,\n      view_modes: [...Object.values(VIEW_MODE)],\n      bar_height: 20,\n      bar_corner_radius: 3,\n      arrow_curve: 5,\n      padding: 18,\n      view_mode: \"Day\",\n      date_format: \"YYYY-MM-DD\",\n      popup_trigger: \"click\",\n      custom_popup_html: null,\n      language: \"en\",\n      readonly: false,\n      highlight_weekend: true,\n    };\n    this.options = Object.assign({}, default_options, options);\n    if (!options.view_mode_padding) options.view_mode_padding = {}\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === \"string\") {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      // convert to Date objects\n      task._start = date_utils.parse(task.start);\n      if (task.end === undefined && task.duration !== undefined) {\n        task.end = task._start;\n        let durations = task.duration.split(\" \");\n\n        durations.forEach((tmpDuration) => {\n          let { duration, scale } = date_utils.parse_duration(tmpDuration);\n          task.end = date_utils.add(task.end, duration, scale);\n        });\n      }\n      task._end = date_utils.parse(task.end);\n\n      // make task invalid if duration too large\n      if (date_utils.diff(task._end, task._start, \"year\") > 10) {\n        task.end = null;\n      }\n\n      // cache index\n      task._index = i;\n\n      // invalid dates\n      if (!task.start && !task.end) {\n        const today = date_utils.today();\n        task._start = today;\n        task._end = date_utils.add(today, 2, \"day\");\n      }\n\n      if (!task.start && task.end) {\n        task._start = date_utils.add(task._end, -2, \"day\");\n      }\n\n      if (task.start && !task.end) {\n        task._end = date_utils.add(task._start, 2, \"day\");\n      }\n\n      // if hours is not set, assume the last day is full day\n      // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n      const task_end_values = date_utils.get_date_values(task._end);\n      if (task_end_values.slice(3).every((d) => d === 0)) {\n        task._end = date_utils.add(task._end, 24, \"hour\");\n      }\n\n      // invalid flag\n      if (!task.start || !task.end) {\n        task.invalid = true;\n      }\n\n      // dependencies\n      if (typeof task.dependencies === \"string\" || !task.dependencies) {\n        let deps = [];\n        if (task.dependencies) {\n          deps = task.dependencies\n            .split(\",\")\n            .map((d) => d.trim())\n            .filter((d) => d);\n        }\n        task.dependencies = deps;\n      }\n\n      // uids\n      if (!task.id) {\n        task.id = generate_id(task);\n      }\n\n      return task;\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      for (let d of t.dependencies) {\n        this.dependency_map[d] = this.dependency_map[d] || [];\n        this.dependency_map[d].push(t.id);\n      }\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    // fire viewmode_change event\n    this.trigger_event(\"view_change\", [mode]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 120;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 120;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (!this.gantt_start || task._start < this.gantt_start) {\n        this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || task._end > this.gantt_end) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, \"day\");\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, \"day\");\n\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n\n    this.gantt_start = date_utils.add(\n      gantt_start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      format_string = \"YYYY\"\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      format_string = \"YYYY-MM\"\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n      format_string = \"YYYY-MM-DD\"\n    } else {\n      format_string = \"YYYY-MM-DD HH\"\n    }\n\n    this.gantt_start = new Date(\n      date_utils.format(\n        date_utils.add(gantt_start, -padding_end.duration, padding_end.scale),\n        format_string\n      )\n    );\n    this.gantt_start.setHours(0, 0, 0, 0)\n\n    this.gantt_end = date_utils.add(\n      gantt_end,\n      padding_end.duration,\n      padding_end.scale,\n    );\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, \"year\");\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, \"month\");\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  bind_events() {\n    if (this.options.readonly) return\n    this.bind_grid_click();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_width();\n    this.set_scroll_position();\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = [\"grid\", \"date\", \"arrow\", \"progress\", \"bar\", \"details\"];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG(\"g\", {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n    this.make_grid_ticks();\n    this.make_grid_highlights();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    const grid_height =\n      this.options.header_height +\n      this.options.padding +\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: \"grid-background\",\n      append_to: this.layers.grid,\n    });\n\n    $.attr(this.$svg, {\n      height: grid_height + this.options.padding + 100,\n      width: \"100%\",\n    });\n  }\n\n  make_grid_rows() {\n    const rows_layer = createSVG(\"g\", { append_to: this.layers.grid });\n    const lines_layer = createSVG(\"g\", { append_to: this.layers.grid });\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    let row_y = this.options.header_height + this.options.padding / 2;\n\n    for (let task of this.tasks) {\n      createSVG(\"rect\", {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: \"grid-row\",\n        append_to: rows_layer,\n      });\n\n      createSVG(\"line\", {\n        x1: 0,\n        y1: row_y + row_height,\n        x2: row_width,\n        y2: row_y + row_height,\n        class: \"row-line\",\n        append_to: lines_layer,\n      });\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n  }\n\n  make_grid_header() {\n    const header_width = this.dates.length * this.options.column_width;\n    const header_height = this.options.header_height + 10;\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: header_width,\n      height: header_height,\n      class: \"grid-header\",\n      append_to: this.layers.grid,\n    });\n  }\n\n  make_grid_ticks() {\n    let tick_x = 0;\n    let tick_y = this.options.header_height + this.options.padding / 2;\n    let tick_height =\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    for (let date of this.dates) {\n      let tick_class = \"tick\";\n      // thick tick for monday\n      if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n        tick_class += \" thick\";\n      }\n      // thick tick for first week\n      if (\n        this.view_is(VIEW_MODE.WEEK) &&\n        date.getDate() >= 1 &&\n        date.getDate() < 8\n      ) {\n        tick_class += \" thick\";\n      }\n      // thick ticks for quarters\n      if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n        tick_class += \" thick\";\n      }\n\n      createSVG(\"path\", {\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n        class: tick_class,\n        append_to: this.layers.grid,\n      });\n\n      if (this.view_is(VIEW_MODE.MONTH)) {\n        tick_x +=\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\n      } else {\n        tick_x += this.options.column_width;\n      }\n    }\n  }\n\n  highlightWeekends() {\n    for (let d = new Date(this.gantt_start); d <= this.gantt_end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() == 0 || d.getDay() == 6) {\n        const x = (date_utils.diff(d, this.gantt_start, 'hour') /\n          this.options.step) *\n          this.options.column_width;\n        const height =\n          (this.options.bar_height + this.options.padding) * this.tasks.length +\n          this.options.header_height +\n          this.options.padding / 2;\n        createSVG('rect', {\n          x,\n          y: 0,\n          width: this.options.column_width,\n          height,\n          class: 'holiday-highlight',\n          append_to: this.layers.grid,\n        });\n      }\n    }\n  }\n\n  //compute the horizontal x distance\n  computeGridHighlightDimensions(view_mode) {\n    let xDist = 0;\n\n    if (this.view_is(VIEW_MODE.DAY)) {\n      return (\n        (date_utils.diff(date_utils.today(), this.gantt_start, \"hour\") /\n          this.options.step) *\n        this.options.column_width\n      );\n    }\n\n    for (let date of this.dates) {\n      const todayDate = new Date();\n      const startDate = new Date(date);\n      const endDate = new Date(date);\n      switch (view_mode) {\n        case VIEW_MODE.WEEK:\n          endDate.setDate(date.getDate() + 7);\n          break;\n        case VIEW_MODE.MONTH:\n          endDate.setMonth(date.getMonth() + 1);\n          break;\n        case VIEW_MODE.YEAR:\n          endDate.setFullYear(date.getFullYear() + 1);\n          break;\n      }\n      if (todayDate >= startDate && todayDate <= endDate) {\n        break;\n      } else {\n        xDist += this.options.column_width;\n      }\n    }\n    return xDist;\n  }\n\n  make_grid_highlights() {\n    if (this.options.highlight_weekend) this.highlightWeekends()\n    // highlight today's | week's | month's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      const x = this.computeGridHighlightDimensions(this.options.view_mode);\n      const y = 0;\n      const width = this.options.column_width;\n      const height =\n        (this.options.bar_height + this.options.padding) * this.tasks.length +\n        this.options.header_height +\n        this.options.padding / 2;\n\n      let className = \"\";\n      switch (this.options.view_mode) {\n        case VIEW_MODE.DAY:\n          className = \"today-highlight\";\n          break;\n        case VIEW_MODE.WEEK:\n          className = \"week-highlight\";\n          break;\n        case VIEW_MODE.MONTH:\n          className = \"month-highlight\";\n          break;\n        case VIEW_MODE.YEAR:\n          className = \"year-highlight\";\n          break;\n      }\n      createSVG(\"rect\", {\n        x,\n        y,\n        width,\n        height,\n        class: className,\n        append_to: this.layers.grid,\n      });\n    }\n  }\n\n  make_dates() {\n    for (let date of this.get_dates_to_draw()) {\n      createSVG(\"text\", {\n        x: date.lower_x,\n        y: date.lower_y,\n        innerHTML: date.lower_text,\n        class: \"lower-text\",\n        append_to: this.layers.date,\n      });\n\n      if (date.upper_text) {\n        const $upper_text = createSVG(\"text\", {\n          x: date.upper_x,\n          y: date.upper_y,\n          innerHTML: date.upper_text,\n          class: \"upper-text\",\n          append_to: this.layers.date,\n        });\n\n        // remove out-of-bound dates\n        if ($upper_text.getBBox().x2 > this.layers.grid.getBBox().width) {\n          $upper_text.remove();\n        }\n      }\n    }\n  }\n\n  get_dates_to_draw() {\n    let last_date = null;\n    const dates = this.dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = date;\n      return d;\n    });\n    return dates;\n  }\n\n  get_date_info(date, last_date, i) {\n    if (!last_date) {\n      last_date = date_utils.add(date, 1, \"day\");\n    }\n    const date_text = {\n      Hour_lower: date_utils.format(date, \"HH\", this.options.language),\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : date_utils.format(date, \"D\", this.options.language),\n      Month_lower: date_utils.format(date, \"MMMM\", this.options.language),\n      Year_lower: date_utils.format(date, \"YYYY\", this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMMM\", this.options.language)\n          : \"\",\n      \"Quarter Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      \"Half Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date.getMonth() !== last_date.getMonth()\n            ? date_utils.format(date, \"D MMM\", this.options.language)\n            : date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Day_upper:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Week_upper:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Month_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n      Year_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n    };\n\n    const base_pos = {\n      x: i * this.options.column_width,\n      lower_y: this.options.header_height,\n      upper_y: this.options.header_height - 25,\n    };\n\n    const x_pos = {\n      Hour_lower: this.options.column_width / 2,\n      Hour_upper: this.options.column_width * 12,\n      \"Quarter Day_lower\": this.options.column_width / 2,\n      \"Quarter Day_upper\": this.options.column_width * 2,\n      \"Half Day_lower\": this.options.column_width / 2,\n      \"Half Day_upper\": this.options.column_width,\n      Day_lower: this.options.column_width / 2,\n      Day_upper: (this.options.column_width * 30) / 2,\n      Week_lower: 0,\n      Week_upper: (this.options.column_width * 4) / 2,\n      Month_lower: this.options.column_width / 2,\n      Month_upper: (this.options.column_width * 12) / 2,\n      Year_lower: this.options.column_width / 2,\n      Year_upper: (this.options.column_width * 30) / 2,\n    };\n\n    return {\n      upper_text: date_text[`${this.options.view_mode}_upper`],\n      lower_text: date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n    };\n  }\n\n  make_bars() {\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      this.layers.bar.appendChild(bar.group);\n      return bar;\n    });\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          this.layers.arrow.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_width() {\n    const cur_width = this.$svg.getBoundingClientRect().width;\n    const actual_width = this.$svg.querySelector('.grid .grid-row') ? this.$svg\n      .querySelector('.grid .grid-row')\n      .getAttribute('width') : 0;\n    if (cur_width < actual_width) {\n      this.$svg.setAttribute(\"width\", actual_width);\n    }\n  }\n\n  set_scroll_position() {\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      this.get_oldest_starting_date(),\n      this.gantt_start,\n      \"hour\",\n    );\n\n    const scroll_pos =\n      (hours_before_first_task / this.options.step) *\n      this.options.column_width -\n      this.options.column_width;\n\n    parent_element.scrollLeft = scroll_pos;\n  }\n\n  bind_grid_click() {\n    $.on(\n      this.$svg,\n      this.options.popup_trigger,\n      \".grid-row, .grid-header\",\n      () => {\n        this.unselect_all();\n        this.hide_popup();\n      },\n    );\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\n\n      if (element.classList.contains(\"left\")) {\n        is_resizing_left = true;\n      } else if (element.classList.contains(\"right\")) {\n        is_resizing_right = true;\n      } else if (element.classList.contains(\"bar-wrapper\")) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add(\"active\");\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\n      const ids = [\n        parent_bar_id,\n        ...this.get_all_dependent_tasks(parent_bar_id),\n      ];\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        $bar.finaldx = this.get_snap_position(dx);\n        this.hide_popup();\n        if (is_resizing_left) {\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n      });\n    });\n\n    document.addEventListener(\"mouseup\", (e) => {\n      if (is_dragging || is_resizing_left || is_resizing_right) {\n        bars.forEach((bar) => bar.group.classList.remove(\"active\"));\n      }\n\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$svg, \"mouseup\", (e) => {\n      this.bar_being_dragged = null;\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    this.bind_bar_progress();\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\n      const id = $bar_wrapper.getAttribute(\"data-id\");\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n      bar.progress_changed();\n      bar.set_action_completed();\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.view_is(VIEW_MODE.WEEK)) {\n      rem = dx % (this.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 14\n          ? 0\n          : this.options.column_width / 7);\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      rem = dx % (this.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 60\n          ? 0\n          : this.options.column_width / 30);\n    } else {\n      rem = dx % this.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\n    }\n    return position;\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\n      el.classList.remove(\"active\");\n    });\n  }\n\n  view_is(modes) {\n    if (typeof modes === \"string\") {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id;\n    });\n  }\n\n  show_popup(options) {\n    if (!this.popup) {\n      this.popup = new Popup(\n        this.popup_wrapper,\n        this.options.custom_popup_html,\n      );\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options[\"on_\" + event]) {\n      this.options[\"on_\" + event].apply(null, args);\n    }\n  }\n\n  /**\n   * Gets the oldest starting date from the list of tasks\n   *\n   * @returns Date\n   * @memberof Gantt\n   */\n  get_oldest_starting_date() {\n    if (!this.tasks.length) return new Date()\n    return this.tasks\n      .map((task) => task._start)\n      .reduce((prev_date, cur_date) =>\n        cur_date <= prev_date ? cur_date : prev_date,\n      );\n  }\n\n  /**\n   * Clear all elements from the parent svg element\n   *\n   * @memberof Gantt\n   */\n  clear() {\n    this.$svg.innerHTML = \"\";\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","show_expected_progress","draw_expected_progress_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","requestAnimationFrame","update_label_position","readonly","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","_start","language","_end","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","step","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","VIEW_MODE_PADDING","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","highlight_weekend","assign","view_mode_padding","entries","start","undefined","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","viewKey","padding_start","padding_end","setHours","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","xDist","todayDate","startDate","endDate","setMonth","setFullYear","className","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","args","apply","prev_date"],"mappings":"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"}