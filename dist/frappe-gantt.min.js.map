{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nconst SHORTENED = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n};\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9])+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length === 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(+values[1] + 1, 2, 0),\n      DD: values[2],\n      HH: values[3],\n      mm: values[4],\n      ss: values[5],\n      SSS: values[6],\n      D: values[2],\n      MMMM: month_name_capitalized,\n      MMM: SHORTENED[month_name_capitalized],\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replaceAll(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replaceAll(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else if (attr === 'clipPath') {\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_values() {\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.image_size = this.height - 5;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper\" + (this.task.custom_class ? \" \" + this.task.custom_class : \"\") + (this.task.important ? ' important' : ''),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  draw() {\n    this.draw_bar();\n    this.draw_progress_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_label();\n    this.draw_resize_handles();\n\n    if (this.task.thumbnail) {\n      this.draw_thumbnail();\n    }\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n    const x = (date_utils.diff(this.task._start, this.gantt.gantt_start, 'hour') /\n      this.gantt.options.step) *\n      this.gantt.options.column_width;\n\n    let $date_highlight = document.createElement(\"div\");\n    $date_highlight.id = `${this.task.id}-highlight`\n    $date_highlight.classList.add('date-highlight')\n    $date_highlight.style.height = this.height * 0.8 + 'px'\n    $date_highlight.style.width = this.width + 'px'\n    $date_highlight.style.top = this.gantt.options.header_height - 21 + 'px'\n    $date_highlight.style.left = x + 'px'\n    this.$date_highlight = $date_highlight\n    this.gantt.$lower_header.appendChild($date_highlight)\n\n\n\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    let x_coord = this.x + this.$bar.getWidth() / 2;\n\n    if (this.task.thumbnail) {\n      x_coord = this.x + this.image_size + 5;\n    }\n\n    createSVG(\"text\", {\n      x: x_coord,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n  draw_thumbnail() {\n    let x_offset = 10, y_offset = 2;\n    let defs, clipPath;\n\n    defs = createSVG('defs', {\n      append_to: this.bar_group\n    });\n\n    createSVG('rect', {\n      id: 'rect_' + this.task.id,\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      rx: '15',\n      class: 'img_mask',\n      append_to: defs\n    });\n\n    clipPath = createSVG('clipPath', {\n      id: 'clip_' + this.task.id,\n      append_to: defs\n    });\n\n    createSVG('use', {\n      href: '#rect_' + this.task.id,\n      append_to: clipPath\n    });\n\n    createSVG('image', {\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      class: 'bar-img',\n      href: this.task.thumbnail,\n      clipPath: 'clip_' + this.task.id,\n      append_to: this.bar_group\n    });\n  }\n\n  draw_resize_handles() {\n    if (this.invalid || this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = 8;\n\n    createSVG(\"rect\", {\n      x: bar.getX() + bar.getWidth() + handle_width - 4,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() - handle_width - 4,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    this.$handle_progress = createSVG(\"polygon\", {\n      points: this.get_progress_polygon_points().join(\",\"),\n      class: \"handle progress\",\n      append_to: this.handle_group,\n    });\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    return [\n      bar_progress.getEndX() - 6,\n      bar_progress.getY() + bar_progress.getHeight() + 8,\n      bar_progress.getEndX() + 6,\n      bar_progress.getY() + bar_progress.getHeight() + 8,\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() + 0.5,\n    ];\n  }\n\n  bind() {\n    if (this.invalid) return;\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    let in_action = false;\n    let task_id = this.task.id;\n    $.on(this.group, \"mouseover\", (e) => {\n      this.gantt.trigger_event(\"hover\", [this.task, e.screenX, e.screenY, e])\n      document.querySelector(`#${task_id}-highlight`).style.display = 'block'\n    })\n    $.on(this.group, \"mouseenter\", (e) => this.show_popup(e.offsetX))\n    $.on(this.group, \"mouseleave\", () => document.querySelector(`#${task_id}-highlight`).style.display = 'none')\n\n\n    $.on(this.group, \"focus \" + this.gantt.options.popup_trigger, () => {\n      this.gantt.trigger_event(\"click\", [this.task]);\n    });\n\n    $.on(this.group, \"dblclick\", (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      this.gantt.trigger_event(\"double_click\", [this.task]);\n    });\n  }\n\n  show_popup(x) {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const subtitle = `${start_date} -  ${end_date}<br/>Progress: ${this.task.progress}`;\n\n    this.gantt.show_popup({\n      x,\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x) {\n      // get all x values of parent task\n      const xs = this.task.dependencies.map((dep) => {\n        return this.gantt.get_bar(dep).$bar.getX();\n      });\n      // child task must not go before parent\n      const valid_x = xs.reduce((prev, curr) => {\n        return x >= curr;\n      }, x);\n      if (!valid_x) {\n        width = null;\n        return;\n      }\n      this.update_attr(bar, \"x\", x);\n      this.update_attr(this.$date_highlight, \"x\", x);\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n      this.update_attr(this.$date_highlight, \"width\", width);\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  update_label_position_on_horizontal_scroll({ x, sx }) {\n    const container = document.querySelector('.gantt-container');\n    const label = this.group.querySelector('.bar-label');\n    const img = this.group.querySelector('.bar-img') || '';\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n    let newLabelX = label.getX() + x;\n    let newImgX = img && img.getX() + x || 0;\n    let imgWidth = img && img.getBBox().width + 7 || 7;\n    let labelEndX = newLabelX + label.getBBox().width + 7;\n    let viewportCentral = sx + container.clientWidth / 2;\n\n    if (label.classList.contains('big')) return;\n\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n\n    }\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 1000);\n  }\n\n  compute_start_end_date() {\n    const bar = this.$bar;\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\n    const new_start_date = date_utils.add(\n      this.gantt.gantt_start,\n      x_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n    const new_end_date = date_utils.add(\n      new_start_date,\n      width_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(\"Month\")) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    this.y =\n      this.gantt.options.header_height +\n      this.gantt.options.padding +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.gantt.view_is(\"Week\")) {\n      rem = dx % (this.gantt.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 14\n          ? 0\n          : this.gantt.options.column_width / 7);\n    } else if (this.gantt.view_is(\"Month\")) {\n      rem = dx % (this.gantt.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 60\n          ? 0\n          : this.gantt.options.column_width / 30);\n    } else {\n      rem = dx % this.gantt.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 2\n          ? 0\n          : this.gantt.options.column_width);\n    }\n    return position;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (this.invalid) return;\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n  }\n\n  update_label_position() {\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\"),\n      img = this.group.querySelector('.bar-img');\n\n\n    let padding = 5;\n    let x_offset_label_img = this.image_size + 10;\n    const labelWidth = label.getBBox().width\n    const barWidth = bar.getWidth()\n    if (labelWidth > barWidth) {\n      label.classList.add(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + bar.getWidth() + padding);\n        img_mask.setAttribute('x', bar.getX() + bar.getWidth() + padding);\n        label.setAttribute('x', bar.getX() + bar.getWidth() + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + bar.getWidth() + padding);\n      }\n    } else {\n      label.classList.remove(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + padding);\n        img_mask.setAttribute('x', bar.getX() + padding);\n        label.setAttribute('x', bar.getX() + barWidth / 2 + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth / 2 - labelWidth / 2);\n      }\n    }\n  }\n\n  update_handle_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    const bar = this.$bar;\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() - 12);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() + 4);\n    const handle = this.group.querySelector(\".handle.progress\");\n    handle && handle.setAttribute(\"points\", this.get_progress_polygon_points());\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === \"[object Function]\"\n  );\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n  }\n\n  calculate_path() {\n    let start_x =\n      this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n    const condition = () =>\n      this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n      start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n    while (condition()) {\n      start_x -= 10;\n    }\n\n    const start_y =\n      this.gantt.options.header_height +\n      this.gantt.options.bar_height +\n      (this.gantt.options.padding + this.gantt.options.bar_height) *\n      this.from_task.task._index +\n      this.gantt.options.padding;\n\n    const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2 - 7;\n    const end_y =\n      this.gantt.options.header_height +\n      this.gantt.options.bar_height / 2 +\n      (this.gantt.options.padding + this.gantt.options.bar_height) *\n      this.to_task.task._index +\n      this.gantt.options.padding;\n\n    const from_is_below_to =\n      this.from_task.task._index > this.to_task.task._index;\n    const curve = this.gantt.options.arrow_curve;\n    const clockwise = from_is_below_to ? 1 : 0;\n    const curve_y = from_is_below_to ? -curve : curve;\n    const offset = from_is_below_to\n      ? end_y + this.gantt.options.arrow_curve\n      : end_y - this.gantt.options.arrow_curve;\n\n    this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n    if (\n      this.to_task.$bar.getX() <\n      this.from_task.$bar.getX() + this.gantt.options.padding\n    ) {\n      const down_1 = this.gantt.options.padding / 2 - curve;\n      const down_2 =\n        this.to_task.$bar.getY() + this.to_task.$bar.getHeight() / 2 - curve_y;\n      const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n      this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n    }\n  }\n\n  draw() {\n    this.element = createSVG(\"path\", {\n      d: this.path,\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  update() {\n    this.calculate_path();\n    this.element.setAttribute(\"d\", this.path);\n  }\n}\n","export default class Popup {\n  constructor(parent, custom_html) {\n    this.parent = parent;\n    this.custom_html = custom_html;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    const target_element = options.target_element;\n\n    if (this.custom_html) {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = options.target_element.getBBox();\n    }\n\n    this.parent.style.left = options.x - this.parent.clientWidth / 2 + \"px\";\n    this.parent.style.top = position_meta.y + position_meta.height + 10 + \"px\";\n\n    this.pointer.style.left = this.parent.clientWidth / 2 + \"px\";\n    this.pointer.style.top = \"-15px\";\n\n    // show\n    this.parent.style.opacity = 1;\n  }\n\n  hide() {\n    this.parent.style.opacity = 0;\n    this.parent.style.left = 0;\n  }\n}\n","import date_utils from \"./date_utils\";\nimport { $, createSVG } from \"./svg_utils\";\nimport Bar from \"./bar\";\nimport Arrow from \"./arrow\";\nimport Popup from \"./popup\";\n\nimport \"./gantt.scss\";\n\nconst VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  YEAR: \"Year\",\n};\n\nconst VIEW_MODE_PADDING = {\n  HOUR: [\"7d\", \"7d\"],\n  QUARTER_DAY: [\"7d\", \"7d\"],\n  HALF_DAY: [\"7d\", \"7d\"],\n  DAY: [\"1m\", \"1m\"],\n  WEEK: [\"1m\", \"1m\"],\n  MONTH: [\"1m\", \"1m\"],\n  YEAR: [\"2y\", \"2y\"],\n};\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n    let svg_element, wrapper_element;\n\n    // CSS Selector is passed\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n\n    // get the SVGElement\n    if (element instanceof HTMLElement) {\n      wrapper_element = element;\n      svg_element = element.querySelector(\"svg\");\n    } else if (element instanceof SVGElement) {\n      svg_element = element;\n    } else {\n      throw new TypeError(\n        \"Frappé Gantt only supports usage of a string CSS selector,\" +\n        \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n      );\n    }\n\n    // svg element\n    if (!svg_element) {\n      // create it\n      this.$svg = createSVG(\"svg\", {\n        append_to: wrapper_element,\n        class: \"gantt\",\n      });\n    } else {\n      this.$svg = svg_element;\n      this.$svg.classList.add(\"gantt\");\n    }\n\n    // wrapper element\n    this.$container = document.createElement(\"div\");\n    this.$container.classList.add(\"gantt-container\");\n\n    const parent_element = this.$svg.parentElement;\n    parent_element.appendChild(this.$container);\n    this.$container.appendChild(this.$svg);\n\n    // popup wrapper\n    this.popup_wrapper = document.createElement(\"div\");\n    this.popup_wrapper.classList.add(\"popup-wrapper\");\n    this.$container.appendChild(this.popup_wrapper);\n  }\n\n  setup_options(options) {\n    const default_options = {\n      header_height: 50,\n      column_width: 30,\n      step: 24,\n      view_modes: [...Object.values(VIEW_MODE)],\n      bar_height: 30,\n      bar_corner_radius: 3,\n      arrow_curve: 5,\n      padding: 18,\n      view_mode: \"Day\",\n      date_format: \"YYYY-MM-DD\",\n      popup_trigger: \"click\",\n      custom_popup_html: null,\n      language: \"en\",\n      readonly: false,\n      highlight_weekend: true,\n      scroll_today: true,\n      lines: 'both',\n      auto_move_label: true,\n    };\n    this.options = Object.assign({}, default_options, options);\n    if (!options.view_mode_padding) options.view_mode_padding = {}\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === \"string\") {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      // convert to Date objects\n      task._start = date_utils.parse(task.start);\n      if (task.end === undefined && task.duration !== undefined) {\n        task.end = task._start;\n        let durations = task.duration.split(\" \");\n\n        durations.forEach((tmpDuration) => {\n          let { duration, scale } = date_utils.parse_duration(tmpDuration);\n          task.end = date_utils.add(task.end, duration, scale);\n        });\n      }\n      task._end = date_utils.parse(task.end);\n      let diff = date_utils.diff(task._end, task._start, \"year\");\n      if (diff < 0) {\n        throw Error(\"start of task can't be after end of task: in task #, \" + (i + 1))\n      }\n      // make task invalid if duration too large\n      if (date_utils.diff(task._end, task._start, \"year\") > 10) {\n        task.end = null;\n      }\n\n\n      // cache index\n      task._index = i;\n\n      // invalid dates\n      if (!task.start && !task.end) {\n        const today = date_utils.today();\n        task._start = today;\n        task._end = date_utils.add(today, 2, \"day\");\n      }\n\n      if (!task.start && task.end) {\n        task._start = date_utils.add(task._end, -2, \"day\");\n      }\n\n      if (task.start && !task.end) {\n        task._end = date_utils.add(task._start, 2, \"day\");\n      }\n\n      // if hours is not set, assume the last day is full day\n      // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n      const task_end_values = date_utils.get_date_values(task._end);\n      if (task_end_values.slice(3).every((d) => d === 0)) {\n        task._end = date_utils.add(task._end, 24, \"hour\");\n      }\n\n      // invalid flag\n      if (!task.start || !task.end) {\n        task.invalid = true;\n      }\n\n      // dependencies\n      if (typeof task.dependencies === \"string\" || !task.dependencies) {\n        let deps = [];\n        if (task.dependencies) {\n          deps = task.dependencies\n            .split(\",\")\n            .map((d) => d.trim().replaceAll(' ', '_'))\n            .filter((d) => d);\n        }\n        task.dependencies = deps;\n      }\n\n      // uids\n      if (!task.id) {\n        task.id = generate_id(task);\n      } else if (typeof task.id === 'string') {\n        task.id = task.id.replaceAll(' ', '_')\n      } else {\n        task.id = `${task.id}`\n      }\n\n      return task;\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      for (let d of t.dependencies) {\n        this.dependency_map[d] = this.dependency_map[d] || [];\n        this.dependency_map[d].push(t.id);\n      }\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    // fire viewmode_change event\n    this.trigger_event(\"view_change\", [mode]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 120;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 120;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (!this.gantt_start || task._start < this.gantt_start) {\n        this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || task._end > this.gantt_end) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, \"day\");\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, \"day\");\n\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n    gantt_start = date_utils.add(\n      gantt_start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      format_string = \"YYYY\"\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      format_string = \"YYYY-MM\"\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n      format_string = \"YYYY-MM-DD\"\n    } else {\n      format_string = \"YYYY-MM-DD HH\"\n    }\n    this.gantt_start = date_utils.parse(date_utils.format(gantt_start, format_string));\n    this.gantt_start.setHours(0, 0, 0, 0)\n    this.gantt_end = date_utils.add(\n      gantt_end,\n      padding_end.duration,\n      padding_end.scale,\n    );\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, \"year\");\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, \"month\");\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  bind_events() {\n    if (this.options.readonly) return\n    this.bind_grid_click();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_width();\n    this.set_scroll_position();\n    if (this.options.scroll_today) this.scroll_today()\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = [\"grid\", \"arrow\", \"progress\", \"bar\", \"details\"];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG(\"g\", {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n    this.make_grid_ticks();\n    this.make_grid_highlights();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    const grid_height =\n      this.options.header_height +\n      this.options.padding +\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: \"grid-background\",\n      append_to: this.$svg,\n    });\n\n    $.attr(this.$svg, {\n      height: grid_height + this.options.padding + 100,\n      width: \"100%\",\n    });\n  }\n\n  make_grid_rows() {\n    const rows_layer = createSVG(\"g\", { append_to: this.layers.grid });\n    const lines_layer = createSVG(\"g\", { append_to: this.layers.grid });\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    let row_y = this.options.header_height + this.options.padding / 2;\n\n    for (let task of this.tasks) {\n      createSVG(\"rect\", {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: \"grid-row\",\n        append_to: rows_layer,\n      });\n      if (this.options.lines === 'both' || this.options.lines === 'horizontal') {\n        createSVG(\"line\", {\n          x1: 0,\n          y1: row_y + row_height,\n          x2: row_width,\n          y2: row_y + row_height,\n          class: \"row-line\",\n          append_to: lines_layer,\n        });\n      }\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n  }\n\n  make_grid_header() {\n    const curHeader = document.querySelector('.grid-header')\n    if (curHeader) {\n      curHeader.remove()\n    };\n\n    let $header = document.createElement(\"div\");\n    $header.style.height = this.options.header_height + 10 + \"px\";\n    $header.style.width = this.dates.length * this.options.column_width + \"px\";\n    $header.classList.add('grid-header')\n    this.$header = $header\n    this.$container.appendChild($header)\n\n    let $upper_header = document.createElement(\"div\");\n    $upper_header.classList.add('upper-header')\n    this.$upper_header = $upper_header\n    this.$header.appendChild($upper_header)\n\n    let $lower_header = document.createElement(\"div\");\n    $lower_header.classList.add('lower-header')\n    this.$lower_header = $lower_header\n    this.$header.appendChild($lower_header)\n\n    let $side_header = document.createElement('div')\n    $side_header.classList.add('side-header')\n\n\n    // Create view mode change select\n    const $select = document.createElement(\"select\");\n    $select.classList.add('viewmode-select')\n\n    for (const key in VIEW_MODE) {\n      const $option = document.createElement(\"option\");\n      $option.value = VIEW_MODE[key];\n      $option.textContent = VIEW_MODE[key];\n      $select.appendChild($option);\n    }\n    $select.value = this.options.view_mode\n    $select.addEventListener(\"change\", (function () {\n      this.change_view_mode($select.value)\n    }).bind(this));\n    $side_header.appendChild($select)\n\n    // Create today button\n    let $today_button = document.createElement('button')\n    $today_button.classList.add('today-button')\n    $today_button.textContent = 'Today'\n    $today_button.onclick = this.scroll_today.bind(this)\n    $side_header.appendChild($today_button)\n\n    this.$header.appendChild($side_header)\n    const { left, y } = $header.getBoundingClientRect();\n    const width = Math.min(this.$header.clientWidth, this.$container.clientWidth)\n    $side_header.style.left = left + this.$container.scrollLeft + width - $side_header.clientWidth + 'px';\n    $side_header.style.top = y + 5 + 'px';\n  }\n\n  make_grid_ticks() {\n    if (this.options.lines !== 'both' && this.options.lines !== 'vertical') return\n    let tick_x = 0;\n    let tick_y = this.options.header_height + this.options.padding / 2;\n    let tick_height =\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    for (let date of this.dates) {\n      let tick_class = \"tick\";\n      // thick tick for monday\n      if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n        tick_class += \" thick\";\n      }\n      // thick tick for first week\n      if (\n        this.view_is(VIEW_MODE.WEEK) &&\n        date.getDate() >= 1 &&\n        date.getDate() < 8\n      ) {\n        tick_class += \" thick\";\n      }\n      // thick ticks for quarters\n      if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n        tick_class += \" thick\";\n      }\n\n      createSVG(\"path\", {\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n        class: tick_class,\n        append_to: this.layers.grid,\n      });\n\n      if (this.view_is(VIEW_MODE.MONTH)) {\n        tick_x +=\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\n      } else {\n        tick_x += this.options.column_width;\n      }\n    }\n  }\n\n  highlightWeekends() {\n    if (!this.view_is('Day') && !this.view_is('Half Day')) return\n    for (let d = new Date(this.gantt_start); d <= this.gantt_end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() === 0 || d.getDay() === 6) {\n        const x = (date_utils.diff(d, this.gantt_start, 'hour') /\n          this.options.step) *\n          this.options.column_width;\n        const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n        createSVG('rect', {\n          x,\n          y: this.options.header_height + this.options.padding / 2,\n          width: (this.view_is('Day') ? 1 : 2) * this.options.column_width,\n          height,\n          class: 'holiday-highlight',\n          append_to: this.layers.grid,\n        });\n      }\n    }\n  }\n\n  //compute the horizontal x distance\n  computeGridHighlightDimensions(view_mode) {\n    let xDist = 0;\n\n    if (this.view_is(VIEW_MODE.DAY)) {\n      return (\n        (date_utils.diff(date_utils.today(), this.gantt_start, \"hour\") /\n          this.options.step) *\n        this.options.column_width\n      );\n    }\n\n    for (let date of this.dates) {\n      const todayDate = new Date();\n      const startDate = new Date(date);\n      const endDate = new Date(date);\n      switch (view_mode) {\n        case VIEW_MODE.WEEK:\n          endDate.setDate(date.getDate() + 7);\n          break;\n        case VIEW_MODE.MONTH:\n          endDate.setMonth(date.getMonth() + 1);\n          break;\n        case VIEW_MODE.YEAR:\n          endDate.setFullYear(date.getFullYear() + 1);\n          break;\n      }\n      if (todayDate >= startDate && todayDate <= endDate) {\n        break;\n      } else {\n        xDist += this.options.column_width;\n      }\n    }\n    return xDist;\n  }\n\n  make_grid_highlights() {\n    if (this.options.highlight_weekend) this.highlightWeekends()\n    // highlight today's | week's | month's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      const x = this.computeGridHighlightDimensions(this.options.view_mode);\n      const y = 0;\n      const width = this.options.column_width;\n      const height =\n        (this.options.bar_height + this.options.padding) * this.tasks.length +\n        this.options.header_height +\n        this.options.padding / 2;\n\n      let className = \"\";\n      switch (this.options.view_mode) {\n        case VIEW_MODE.DAY:\n          className = \"today-highlight\";\n          break;\n        case VIEW_MODE.WEEK:\n          className = \"week-highlight\";\n          break;\n        case VIEW_MODE.MONTH:\n          className = \"month-highlight\";\n          break;\n        case VIEW_MODE.YEAR:\n          className = \"year-highlight\";\n          break;\n      }\n      createSVG(\"rect\", {\n        x,\n        y,\n        width,\n        height,\n        class: className,\n        append_to: this.layers.grid,\n      });\n    }\n  }\n\n  make_dates() {\n    this.upper_texts_x = {}\n    this.get_dates_to_draw().forEach((date, i) => {\n      let $lower_text = document.createElement('div');\n      $lower_text.classList.add('lower-text')\n      $lower_text.innerText = date.lower_text\n      this.$lower_header.appendChild($lower_text)\n      $lower_text.style.left = date.lower_x - (true ? $lower_text.clientWidth / 2 : 0) + 'px'\n      $lower_text.style.top = date.lower_y + 'px'\n\n      if (date.upper_text) {\n        this.upper_texts_x[date.upper_text] = date.upper_x\n        let $upper_text = document.createElement('div');\n        $upper_text.classList.add('upper-text')\n        $upper_text.style.left = date.upper_x + 'px'\n        $upper_text.style.top = date.upper_y + 'px'\n        $upper_text.innerText = date.upper_text\n        this.$upper_header.appendChild($upper_text)\n\n        // remove out-of-bound dates\n        if (date.upper_x > this.layers.grid.getBBox().width) {\n          $upper_text.remove();\n        }\n      }\n    })\n  }\n\n  get_dates_to_draw() {\n    let last_date = null;\n    const dates = this.dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = d;\n      return d;\n    });\n    return dates;\n  }\n\n  get_date_info(date, last_date_info) {\n    let last_date = last_date_info ? last_date_info.date : date_utils.add(date, 1, \"day\")\n    const date_text = {\n      Hour_lower: date_utils.format(date, \"HH\", this.options.language),\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : date_utils.format(date, \"D\", this.options.language),\n      Month_lower: date_utils.format(date, \"MMMM\", this.options.language),\n      Year_lower: date_utils.format(date, \"YYYY\", this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMMM\", this.options.language)\n          : \"\",\n      \"Quarter Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      \"Half Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date.getMonth() !== last_date.getMonth()\n            ? date_utils.format(date, \"D MMM\", this.options.language)\n            : date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Day_upper:\n        date.getMonth() !== last_date.getMonth() || !last_date_info\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Week_upper:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Month_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n      Year_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n    };\n    let column_width = this.view_is(VIEW_MODE.MONTH) ? (date_utils.get_days_in_month(date) * this.options.column_width) / 30 : this.options.column_width;\n    const base_pos = {\n      x: last_date_info\n        ? last_date_info.base_pos_x + last_date_info.column_width\n        : 0,\n      lower_y: this.options.header_height - 15,\n      upper_y: this.options.header_height - 40,\n    };\n    const x_pos = {\n      Hour_lower: column_width / 2,\n      Hour_upper: column_width * 12,\n      \"Quarter Day_lower\": column_width / 2,\n      \"Quarter Day_upper\": column_width * 2,\n      \"Half Day_lower\": column_width / 2,\n      \"Half Day_upper\": column_width,\n      Day_lower: column_width / 2,\n      Day_upper: column_width / 2,\n      Week_lower: column_width / 2,\n      Week_upper: (column_width * 4) / 2,\n      Month_lower: column_width / 2,\n      Month_upper: column_width / 2,\n      Year_lower: column_width / 2,\n      Year_upper: (column_width * 30) / 2,\n    };\n    return {\n      date,\n      column_width,\n      base_pos_x: base_pos.x,\n      upper_text: date_text[`${this.options.view_mode}_upper`],\n      lower_text: date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n    };\n  }\n\n  make_bars() {\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      this.layers.bar.appendChild(bar.group);\n      return bar;\n    });\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          this.layers.arrow.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_width() {\n    const cur_width = this.$svg.getBoundingClientRect().width;\n    const actual_width = this.$svg.querySelector('.grid .grid-row') ? this.$svg\n      .querySelector('.grid .grid-row')\n      .getAttribute('width') : 0;\n    if (cur_width < actual_width) {\n      this.$svg.setAttribute(\"width\", actual_width);\n    }\n  }\n\n  set_scroll_position(date) {\n    if (!date) {\n      date = this.gantt_start\n    }\n\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      this.get_oldest_starting_date(),\n      date,\n      \"hour\",\n    );\n\n    const scroll_pos =\n      (hours_before_first_task / this.options.step) *\n      this.options.column_width -\n      this.options.column_width;\n    parent_element.scrollTo({ left: scroll_pos, behavior: 'smooth' })\n  }\n\n  scroll_today() {\n    const oldest = this.get_oldest_starting_date().getTime()\n    const t = new Date() - oldest\n    this.set_scroll_position(new Date(this.gantt_start.getTime() - t))\n  }\n\n  bind_grid_click() {\n    $.on(\n      this.$svg,\n      this.options.popup_trigger,\n      \".grid-row, .grid-header\",\n      () => {\n        this.unselect_all();\n        this.hide_popup();\n      },\n    );\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let x_on_scroll_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\n      bars.forEach((bar) => bar.group.classList.remove(\"active\"));\n\n      if (element.classList.contains(\"left\")) {\n        is_resizing_left = true;\n      } else if (element.classList.contains(\"right\")) {\n        is_resizing_right = true;\n      } else if (element.classList.contains(\"bar-wrapper\")) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add(\"active\");\n      this.popup.parent.classList.add('hidden')\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\n      const ids = [\n        parent_bar_id,\n        ...this.get_all_dependent_tasks(parent_bar_id),\n      ];\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n    $.on(this.$container, 'scroll', e => {\n      let elements = document.querySelectorAll('.bar-wrapper');\n      let localBars = [];\n      const ids = [];\n      let dx;\n      if (x_on_scroll_start) {\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n      }\n\n      const daysSinceStart = e.currentTarget.scrollLeft / this.options.column_width * this.options.step / 24;\n      let format_str = \"D MMM\"\n      if ([\"Year\", \"Month\"].includes(this.options.view_mode)) format_str = 'YYYY'\n      else if ([\"Day\", \"Week\"].includes(this.options.view_mode)) format_str = 'MMMM'\n      else if (this.view_is('Half Day')) format_str = 'D'\n      else if (this.view_is('Hour')) format_str = \"D MMMM\"\n\n\n      let currentUpper = date_utils.format(\n        date_utils.add(this.gantt_start, daysSinceStart, 'day'),\n        format_str\n      );\n      const upperTexts = Array.from(document.querySelectorAll('.upper-text'));\n      const $el = upperTexts.find(el => el.textContent === currentUpper)\n      if ($el && !$el.classList.contains('current-upper')) {\n        const $current = document.querySelector('.current-upper')\n        if ($current) {\n          $current.classList.remove('current-upper')\n          $current.style.left = this.upper_texts_x[$current.textContent] + 'px';\n          $current.style.top = this.options.header_height - 40 + 'px';\n        }\n\n        $el.classList.add('current-upper')\n        let dimensions = this.$svg.getBoundingClientRect()\n        $el.style.left = dimensions.x + this.$container.scrollLeft + 10 + 'px';\n        $el.style.top = dimensions.y + this.options.header_height - 40 + 'px';\n      }\n\n      Array.prototype.forEach.call(elements, function (el, i) {\n        ids.push(el.getAttribute('data-id'));\n      });\n\n      if (dx) {\n        localBars = ids.map(id => this.get_bar(id));\n        if (this.options.auto_move_label) {\n          localBars.forEach(bar => {\n            bar.update_label_position_on_horizontal_scroll({ x: dx, sx: e.currentTarget.scrollLeft });\n          });\n        }\n      }\n\n      x_on_scroll_start = e.currentTarget.scrollLeft;\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        $bar.finaldx = this.get_snap_position(dx);\n        this.hide_popup();\n        if (is_resizing_left) {\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging && !this.options.readonly) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n      });\n    });\n\n    document.addEventListener(\"mouseup\", (e) => {\n\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$svg, \"mouseup\", (e) => {\n      this.bar_being_dragged = null;\n      bars.forEach((bar) => {\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    this.bind_bar_progress();\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\n      const id = $bar_wrapper.getAttribute(\"data-id\");\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n\n      $bar_progress.finaldx = 0;\n      bar.progress_changed();\n      bar.set_action_completed();\n      bar = null;\n      $bar_progress = null;\n      $bar = null;\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.view_is(VIEW_MODE.WEEK)) {\n      rem = dx % (this.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 14\n          ? 0\n          : this.options.column_width / 7);\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      rem = dx % (this.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 60\n          ? 0\n          : this.options.column_width / 30);\n    } else {\n      rem = dx % this.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\n    }\n    return position;\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\n      el.classList.remove(\"active\");\n    });\n    this.popup.parent.classList.remove('hidden')\n  }\n\n  view_is(modes) {\n    if (typeof modes === \"string\") {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id;\n    });\n  }\n\n  show_popup(options) {\n    if (!this.popup) {\n      this.popup = new Popup(\n        this.popup_wrapper,\n        this.options.custom_popup_html,\n      );\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options[\"on_\" + event]) {\n      this.options[\"on_\" + event].apply(null, args);\n    }\n  }\n\n  /**\n   * Gets the oldest starting date from the list of tasks\n   *\n   * @returns Date\n   * @memberof Gantt\n   */\n  get_oldest_starting_date() {\n    if (!this.tasks.length) return new Date()\n    return this.tasks\n      .map((task) => task._start)\n      .reduce((prev_date, cur_date) =>\n        cur_date <= prev_date ? cur_date : prev_date,\n      );\n  }\n\n  /**\n   * Clear all elements from the parent svg element\n   *\n   * @memberof Gantt\n   */\n  clear() {\n    this.$svg.innerHTML = \"\";\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","SHORTENED","January","February","March","April","May","June","July","August","September","October","November","December","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","group","class","custom_class","important","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","thumbnail","draw_thumbnail","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","_start","gantt_start","step","$date_highlight","createElement","style","top","header_height","left","$lower_header","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","task_id","trigger_event","screenX","screenY","display","show_popup","offsetX","popup_trigger","bar_being_dragged","subtitle","language","_end","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","label","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","width_in_units","task_start","view_is","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","x_offset_label_img","labelWidth","barWidth","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","Popup","parent","custom_html","make","hide","pointer","show","Error","html","position_meta","HTMLElement","getBoundingClientRect","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","VIEW_MODE_PADDING","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","highlight_weekend","scroll_today","lines","auto_move_label","assign","view_mode_padding","entries","start","undefined","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","viewKey","padding_start","padding_end","setHours","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","rows_layer","grid","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","curHeader","$header","$upper_header","$side_header","$select","$option","textContent","$today_button","onclick","min","scrollLeft","tick_x","tick_y","tick_height","tick_class","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","xDist","todayDate","startDate","endDate","setMonth","setFullYear","className","upper_texts_x","get_dates_to_draw","$lower_text","innerText","lower_text","lower_x","lower_y","upper_text","upper_x","$upper_text","upper_y","last_date","get_date_info","last_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","x_pos","bars","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollTo","behavior","oldest","getTime","unselect_all","hide_popup","is_dragging","x_on_start","x_on_scroll_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","popup","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","elements","querySelectorAll","localBars","currentTarget","daysSinceStart","format_str","currentUpper","$el","Array","find","el","$current","dimensions","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","modes","isArray","some","args","apply","prev_date"],"mappings":"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"}